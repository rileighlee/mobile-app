{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenHeight = _Dimensions$get.height;\nvar MedicineInteractionChecker = function MedicineInteractionChecker() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicines = _useState2[0],\n    setMedicines = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMedicine1 = _useState4[0],\n    setSelectedMedicine1 = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMedicine2 = _useState6[0],\n    setSelectedMedicine2 = _useState6[1];\n  useEffect(function () {\n    fetchMedicines();\n  }, []);\n  var fetchMedicines = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var medicineList = yield ApiService.getAllMedicine();\n        setMedicines(medicineList);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchMedicines() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleCheckInteraction = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (selectedMedicine1 && selectedMedicine2) {\n        try {\n          var interactionResult = yield ApiService.checkMedicineInteraction(selectedMedicine1, selectedMedicine2);\n          console.log('Interaction Result:', interactionResult);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    });\n    return function handleCheckInteraction() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onMedicine1Select = function onMedicine1Select(item) {\n    setSelectedMedicine1(item.id);\n  };\n  var onMedicine2Select = function onMedicine2Select(item) {\n    setSelectedMedicine2(item.id);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [_jsx(SearchableDropdown, {\n        onItemSelect: onMedicine1Select,\n        containerStyle: styles.dropdownContainer,\n        itemStyle: styles.dropdownItem,\n        itemTextStyle: styles.dropdownItemText,\n        items: medicines,\n        textInputStyle: styles.searchInput,\n        placeholder: \"Search Medicine 1\",\n        resetValue: false,\n        underlineColorAndroid: \"transparent\",\n        autoCorrect: false,\n        selectedValue: selectedMedicine1\n      }), _jsx(SearchableDropdown, {\n        onItemSelect: onMedicine2Select,\n        containerStyle: styles.dropdownContainer,\n        itemStyle: styles.dropdownItem,\n        itemTextStyle: styles.dropdownItemText,\n        items: medicines,\n        textInputStyle: styles.searchInput,\n        placeholder: \"Search Medicine 2\",\n        resetValue: false,\n        underlineColorAndroid: \"transparent\",\n        autoCorrect: false,\n        selectedValue: selectedMedicine2\n      }), _jsx(Button, {\n        title: \"Check Interaction\",\n        onPress: handleCheckInteraction\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA0D2'\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: 'center',\n    backgroundColor: '#FFC8E5',\n    alignItems: 'center',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'cover'\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#FFA0D2'\n  },\n  dropdownContainer: {\n    marginTop: 10\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: '#FAF9F8',\n    borderColor: '#ddd',\n    borderBottomWidth: 1\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: '#000'\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    backgroundColor: '#fff'\n  }\n});\nexport default MedicineInteractionChecker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","Dimensions","Button","SearchableDropdown","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineInteractionChecker","_useState","_useState2","_slicedToArray","medicines","setMedicines","_useState3","_useState4","selectedMedicine1","setSelectedMedicine1","_useState5","_useState6","selectedMedicine2","setSelectedMedicine2","fetchMedicines","_ref","_asyncToGenerator","medicineList","getAllMedicine","error","console","apply","arguments","handleCheckInteraction","_ref2","interactionResult","checkMedicineInteraction","log","onMedicine1Select","item","id","onMedicine2Select","style","styles","container","children","lowerHalf","onItemSelect","containerStyle","dropdownContainer","itemStyle","dropdownItem","itemTextStyle","dropdownItemText","items","textInputStyle","searchInput","placeholder","resetValue","underlineColorAndroid","autoCorrect","selectedValue","title","onPress","create","flex","backgroundColor","upperHalf","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","logoBackground","width","borderRadius","logo","resizeMode","paddingHorizontal","paddingTop","fontSize","fontWeight","marginBottom","color","marginTop","padding","borderColor","borderBottomWidth","borderWidth"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/MedicineInteractionChecker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Image, StyleSheet, Dimensions, Button } from 'react-native';\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport ApiService from '../services/ApiService';\n\nconst { height: screenHeight } = Dimensions.get('window');\n\nconst MedicineInteractionChecker = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedicine1, setSelectedMedicine1] = useState(null);\n  const [selectedMedicine2, setSelectedMedicine2] = useState(null);\n\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const medicineList = await ApiService.getAllMedicine();\n      setMedicines(medicineList);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const handleCheckInteraction = async () => {\n    if (selectedMedicine1 && selectedMedicine2) {\n      try {\n        const interactionResult = await ApiService.checkMedicineInteraction(\n          selectedMedicine1,\n          selectedMedicine2\n        );\n        console.log('Interaction Result:', interactionResult);\n        // Handle the interaction result as needed\n      } catch (error) {\n        console.error(error);\n        // Handle error\n      }\n    }\n  };\n\n  const onMedicine1Select = (item) => {\n    setSelectedMedicine1(item.id);\n  };\n\n  const onMedicine2Select = (item) => {\n    setSelectedMedicine2(item.id);\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* ... other parts of your component */}\n      <View style={styles.lowerHalf}>\n        <SearchableDropdown\n          onItemSelect={onMedicine1Select}\n          containerStyle={styles.dropdownContainer}\n          itemStyle={styles.dropdownItem}\n          itemTextStyle={styles.dropdownItemText}\n          items={medicines}\n          textInputStyle={styles.searchInput}\n          placeholder=\"Search Medicine 1\"\n          resetValue={false}\n          underlineColorAndroid=\"transparent\"\n          autoCorrect={false}\n          selectedValue={selectedMedicine1}\n        />\n        <SearchableDropdown\n          onItemSelect={onMedicine2Select}\n          containerStyle={styles.dropdownContainer}\n          itemStyle={styles.dropdownItem}\n          itemTextStyle={styles.dropdownItemText}\n          items={medicines}\n          textInputStyle={styles.searchInput}\n          placeholder=\"Search Medicine 2\"\n          resetValue={false}\n          underlineColorAndroid=\"transparent\"\n          autoCorrect={false}\n          selectedValue={selectedMedicine2}\n        />\n        <Button title=\"Check Interaction\" onPress={handleCheckInteraction} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA0D2',\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: 'center',\n    backgroundColor: '#FFC8E5',\n    alignItems: 'center',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'cover',\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#FFA0D2',\n  },\n  dropdownContainer: {\n    marginTop: 10,\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: '#FAF9F8',\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: '#000',\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    backgroundColor: '#fff',\n  },\n});\n\nexport default MedicineInteractionChecker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}