{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenHeight = _Dimensions$get.height;\nvar MedicineInteractionChecker = function MedicineInteractionChecker() {\n  var _result$interaction;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicines = _useState2[0],\n    setMedicines = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMedicine1 = _useState4[0],\n    setSelectedMedicine1 = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMedicine2 = _useState6[0],\n    setSelectedMedicine2 = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    result = _useState8[0],\n    setInteractionResult = _useState8[1];\n  useEffect(function () {\n    fetchMedicines();\n  }, []);\n  var fetchMedicines = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var medicineList = yield ApiService.getAllMedicine();\n        var translatedMedicineList = medicineList.map(function (item) {\n          return {\n            id: item.id,\n            name: item.name,\n            value: item.id\n          };\n        });\n        setMedicines(translatedMedicineList);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchMedicines() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleCheckInteraction = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (selectedMedicine1 && selectedMedicine2) {\n        try {\n          var interactionResult = yield ApiService.checkMedicineInteraction(selectedMedicine1, selectedMedicine2);\n          console.log(selectedMedicine1, selectedMedicine2);\n          setInteractionResult(interactionResult);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    });\n    return function handleCheckInteraction() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.logoBackground,\n        children: _jsx(Image, {\n          source: require(\"../assets/comparing.png\"),\n          style: styles.logo\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Medicine Interaction Checker\"\n      })]\n    }), _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [_jsxs(Picker, {\n        selectedValue: selectedMedicine1,\n        style: styles.dropdown,\n        onValueChange: function onValueChange(itemValue) {\n          return setSelectedMedicine1(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Select Medicine 1\",\n          value: \"\"\n        }), medicines.map(function (medicine) {\n          return _jsx(Picker.Item, {\n            label: medicine.name,\n            value: medicine.id\n          }, medicine.id);\n        })]\n      }), _jsxs(Picker, {\n        selectedValue: selectedMedicine2,\n        style: styles.dropdown,\n        onValueChange: function onValueChange(itemValue) {\n          return setSelectedMedicine2(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Select Medicine 2\",\n          value: \"\"\n        }), medicines.map(function (medicine) {\n          return _jsx(Picker.Item, {\n            label: medicine.name,\n            value: medicine.id\n          }, medicine.id);\n        })]\n      }), _jsx(Button, {\n        title: \"Check Interaction\",\n        onPress: handleCheckInteraction\n      }), _jsxs(Text, {\n        style: styles.interactionText,\n        children: [\"Interaction: \", (_result$interaction = result.interaction) != null ? _result$interaction : \"No interaction found.\"]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFA0D2\"\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#FFC8E5\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\"\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFA0D2\"\n  },\n  dropdownContainer: {\n    marginTop: 10\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: \"#FAF9F8\",\n    borderColor: \"#ddd\",\n    borderBottomWidth: 1\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: \"#000\"\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default MedicineInteractionChecker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","Dimensions","Button","Picker","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineInteractionChecker","_result$interaction","_useState","_useState2","_slicedToArray","medicines","setMedicines","_useState3","_useState4","selectedMedicine1","setSelectedMedicine1","_useState5","_useState6","selectedMedicine2","setSelectedMedicine2","_useState7","_useState8","result","setInteractionResult","fetchMedicines","_ref","_asyncToGenerator","medicineList","getAllMedicine","translatedMedicineList","map","item","id","name","value","error","console","apply","arguments","handleCheckInteraction","_ref2","interactionResult","checkMedicineInteraction","log","style","styles","container","children","upperHalf","logoBackground","source","require","logo","title","lowerHalf","selectedValue","dropdown","onValueChange","itemValue","Item","label","medicine","onPress","interactionText","interaction","create","flex","backgroundColor","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","width","borderRadius","resizeMode","paddingHorizontal","paddingTop","fontSize","fontWeight","marginBottom","color","dropdownContainer","marginTop","dropdownItem","padding","borderColor","borderBottomWidth","dropdownItemText","searchInput","borderWidth"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/MedicineInteractionChecker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Dimensions,\n  Button,\n  Picker,\n} from \"react-native\";\nimport ApiService from \"../services/ApiService\";\n\nconst { height: screenHeight } = Dimensions.get(\"window\");\n\nconst MedicineInteractionChecker = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedicine1, setSelectedMedicine1] = useState('');\n  const [selectedMedicine2, setSelectedMedicine2] = useState('');\n  const [result, setInteractionResult] = useState('');\n\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const medicineList = await ApiService.getAllMedicine();\n      const translatedMedicineList = medicineList.map((item) => ({\n        id: item.id,\n        name: item.name,\n        value: item.id,\n      }));\n      setMedicines(translatedMedicineList);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const handleCheckInteraction = async () => {\n    if (selectedMedicine1 && selectedMedicine2) {\n      try {\n        const interactionResult = await ApiService.checkMedicineInteraction(\n          selectedMedicine1,\n          selectedMedicine2\n        );\n        console.log(selectedMedicine1,\n          selectedMedicine2)\n        setInteractionResult(interactionResult);\n        // Handle the interaction result as needed\n      } catch (error) {\n        console.error(error);\n        // Handle error\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.logoBackground}>\n          <Image\n            source={require(\"../assets/comparing.png\")}\n            style={styles.logo}\n          />\n        </View>\n        <Text style={styles.title}>Medicine Interaction Checker</Text>\n      </View>\n      <View style={styles.lowerHalf}>\n        <Picker\n          selectedValue={selectedMedicine1}\n          style={styles.dropdown}\n          onValueChange={(itemValue) => setSelectedMedicine1(itemValue)}\n        >\n          <Picker.Item label=\"Select Medicine 1\" value=\"\" />\n          {medicines.map((medicine) => (\n            <Picker.Item\n              key={medicine.id}\n              label={medicine.name}\n              value={medicine.id}\n            />\n          ))}\n        </Picker>\n        <Picker\n          selectedValue={selectedMedicine2}\n          style={styles.dropdown}\n          onValueChange={(itemValue) => setSelectedMedicine2(itemValue)}\n        >\n          <Picker.Item label=\"Select Medicine 2\" value=\"\" />\n          {medicines.map((medicine) => (\n            <Picker.Item\n              key={medicine.id}\n              label={medicine.name}\n              value={medicine.id}\n            />\n          ))}\n        </Picker>\n        <Button title=\"Check Interaction\" onPress={handleCheckInteraction} />\n        <Text style={styles.interactionText}>\n          Interaction: {result.interaction ?? \"No interaction found.\"}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFA0D2\",\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#FFC8E5\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\",\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFA0D2\",\n  },\n  dropdownContainer: {\n    marginTop: 10,\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: \"#FAF9F8\",\n    borderColor: \"#ddd\",\n    borderBottomWidth: 1,\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: \"#000\",\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    backgroundColor: \"#fff\",\n  },\n});\n\nexport default MedicineInteractionChecker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}