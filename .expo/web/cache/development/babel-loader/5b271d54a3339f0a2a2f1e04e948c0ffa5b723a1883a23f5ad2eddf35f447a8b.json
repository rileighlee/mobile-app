{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenHeight = _Dimensions$get.height;\nvar MedicineLists = function MedicineLists(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    categoriesWithMedicines = _useState2[0],\n    setCategoriesWithMedicines = _useState2[1];\n  useEffect(function () {\n    fetchCategoriesWithMedicines();\n  }, []);\n  var fetchCategoriesWithMedicines = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield ApiService.getAllCategoriesWithMedicines();\n        setCategoriesWithMedicines(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchCategoriesWithMedicines() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCategoryClick = function handleCategoryClick(index) {\n    setSelectedCategory(index === selectedCategory ? null : index);\n  };\n  var handleMedicineClick = function handleMedicineClick(medicine) {\n    setSelectedMedicine(medicine);\n    navigation.navigate(\"MedicineDetails\", {\n      medicine: medicine\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.logoBackground,\n        children: _jsx(Image, {\n          source: require(\"../assets/medicine.png\"),\n          style: styles.logo\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Medicine List\"\n      })]\n    }), _jsx(View, {\n      style: styles.lowerHalf,\n      children: categories.map(function (category, index) {\n        return _jsxs(Pressable, {\n          onPress: function onPress() {\n            return handleCategoryClick(index);\n          },\n          style: styles.barContainer,\n          children: [_jsxs(View, {\n            style: styles.barTitleContainer,\n            children: [_jsx(Text, {\n              style: styles.barTitle,\n              children: category\n            }), _jsx(Text, {\n              style: styles.downArrow,\n              children: selectedCategory === index ? \"▲\" : \"▼\"\n            })]\n          }), selectedCategory === index && _jsx(View, {\n            style: styles.medicineList,\n            children: medicinesByCategory[category].map(function (medicine, medIndex) {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  return handleMedicineClick(medicine);\n                },\n                style: styles.medicineItem,\n                children: _jsx(Text, {\n                  style: styles.medicineText,\n                  children: medicine\n                })\n              }, medIndex);\n            })\n          })]\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FADEFF\"\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#F2ABFF\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\"\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    marginTop: 10\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#A3007F\"\n  },\n  barContainer: {\n    marginBottom: 10,\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    fontStyle: \"italic\"\n  },\n  barTitleContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\"\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: \"italic\",\n    marginBottom: 5\n  },\n  downArrow: {\n    fontSize: 12\n  },\n  medicineList: {\n    marginVertical: 10\n  },\n  medicineItem: {\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    marginVertical: 5\n  },\n  medicineText: {\n    fontSize: 16\n  }\n});\nexport default MedicineLists;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","Pressable","StyleSheet","Dimensions","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineLists","_ref","navigation","_useState","_useState2","_slicedToArray","categoriesWithMedicines","setCategoriesWithMedicines","fetchCategoriesWithMedicines","_ref2","_asyncToGenerator","data","getAllCategoriesWithMedicines","console","log","error","apply","arguments","handleCategoryClick","index","setSelectedCategory","selectedCategory","handleMedicineClick","medicine","setSelectedMedicine","navigate","style","styles","container","children","upperHalf","logoBackground","source","require","logo","title","lowerHalf","categories","map","category","onPress","barContainer","barTitleContainer","barTitle","downArrow","medicineList","medicinesByCategory","medIndex","medicineItem","medicineText","create","flex","backgroundColor","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","width","borderRadius","resizeMode","paddingHorizontal","marginTop","fontSize","fontWeight","marginBottom","color","borderColor","padding","fontStyle","flexDirection","marginVertical"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/Medicinelists.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  Pressable,\n  StyleSheet,\n  Dimensions,\n} from \"react-native\";\nimport ApiService from \"../services/ApiService\"; // Import your ApiService\n\nconst { height: screenHeight } = Dimensions.get(\"window\");\n\nconst MedicineLists = ({ navigation }) => {\n  const [categoriesWithMedicines, setCategoriesWithMedicines] = useState([]);\n\n  useEffect(() => {\n    fetchCategoriesWithMedicines();\n  }, []);\n\n  const fetchCategoriesWithMedicines = async () => {\n    try {\n      const data = await ApiService.getAllCategoriesWithMedicines();\n      setCategoriesWithMedicines(data);\n      console.log(data)\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const handleCategoryClick = (index) => {\n    setSelectedCategory(index === selectedCategory ? null : index);\n  };\n\n  const handleMedicineClick = (medicine) => {\n    setSelectedMedicine(medicine);\n    navigation.navigate(\"MedicineDetails\", { medicine });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.logoBackground}>\n          <Image\n            source={require(\"../assets/medicine.png\")}\n            style={styles.logo}\n          />\n        </View>\n        <Text style={styles.title}>Medicine List</Text>\n      </View>\n      <View style={styles.lowerHalf}>\n        {categories.map((category, index) => (\n          <Pressable\n            key={index}\n            onPress={() => handleCategoryClick(index)}\n            style={styles.barContainer}\n          >\n            <View style={styles.barTitleContainer}>\n              <Text style={styles.barTitle}>{category}</Text>\n              <Text style={styles.downArrow}>\n                {selectedCategory === index ? \"▲\" : \"▼\"}\n              </Text>\n            </View>\n            {selectedCategory === index && (\n              <View style={styles.medicineList}>\n                {medicinesByCategory[category].map((medicine, medIndex) => (\n                  <Pressable\n                    key={medIndex}\n                    onPress={() => handleMedicineClick(medicine)}\n                    style={styles.medicineItem}\n                  >\n                    <Text style={styles.medicineText}>{medicine}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            )}\n          </Pressable>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FADEFF\",\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#F2ABFF\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\",\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#A3007F\",\n  },\n  barContainer: {\n    marginBottom: 10,\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    fontStyle: \"italic\",\n  },\n  barTitleContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\",\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: \"italic\",\n    marginBottom: 5,\n  },\n  downArrow: {\n    fontSize: 12,\n  },\n  medicineList: {\n    marginVertical: 10,\n  },\n  medicineItem: {\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    marginVertical: 5,\n  },\n  medicineText: {\n    fontSize: 16,\n  },\n});\n\nexport default MedicineLists;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}