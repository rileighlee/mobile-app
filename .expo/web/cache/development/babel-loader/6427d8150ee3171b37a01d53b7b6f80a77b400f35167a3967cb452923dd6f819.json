{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar BASE_URL = 'https://localhost:7054/api';\nvar ApiService = {\n  getData: function () {\n    var _getData = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(`${BASE_URL}/endpoint`);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n    return getData;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator(function* (email, password) {\n      try {\n        var response = yield axios.post(`${BASE_URL}/User/login`, {\n          email: email,\n          password: password\n        });\n        return response.data.token;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  postData: function () {\n    var _postData = _asyncToGenerator(function* (data) {\n      try {\n        var response = yield axios.post(`${BASE_URL}/endpoint`, data);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function postData(_x3) {\n      return _postData.apply(this, arguments);\n    }\n    return postData;\n  }(),\n  getMedicineByCategory: function () {\n    var _getMedicineByCategory = _asyncToGenerator(function* (categoryId) {\n      try {\n        var response = yield axios.get(`${BASE_URL}/Medicine/GetMedicineByCategory/${categoryId}`);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function getMedicineByCategory(_x4) {\n      return _getMedicineByCategory.apply(this, arguments);\n    }\n    return getMedicineByCategory;\n  }(),\n  getAllCategoriesWithMedicines: function () {\n    var _getAllCategoriesWithMedicines = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(`${BASE_URL}/Category/GetAllCategoriesWithMedicines`);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function getAllCategoriesWithMedicines() {\n      return _getAllCategoriesWithMedicines.apply(this, arguments);\n    }\n    return getAllCategoriesWithMedicines;\n  }(),\n  getAllMedicine: function () {\n    var _getAllMedicine = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(`${BASE_URL}/Medicine/GetAllMedicine`);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function getAllMedicine() {\n      return _getAllMedicine.apply(this, arguments);\n    }\n    return getAllMedicine;\n  }(),\n  getMedicineById: function () {\n    var _getMedicineById = _asyncToGenerator(function* (id) {\n      try {\n        var response = yield axios.get(`${BASE_URL}/Medicine/GetMedicineById/${id}`);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function getMedicineById(_x5) {\n      return _getMedicineById.apply(this, arguments);\n    }\n    return getMedicineById;\n  }(),\n  checkMedicineInteraction: function () {\n    var _checkMedicineInteraction = _asyncToGenerator(function* (id1, id2) {\n      try {\n        var response = yield axios.post(`${BASE_URL}/Medicine/CheckInteraction`, {\n          id1: id1,\n          id2: id2\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error('Failed to check medicine interaction');\n      }\n    });\n    function checkMedicineInteraction(_x6, _x7) {\n      return _checkMedicineInteraction.apply(this, arguments);\n    }\n    return checkMedicineInteraction;\n  }(),\n  getUserDetail: function () {\n    var _getUserDetail = _asyncToGenerator(function* (token) {\n      try {\n        var response = yield axios.get(`${BASE_URL}/User/GetUserDetail`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error('Failed to fetch user details');\n      }\n    });\n    function getUserDetail(_x8) {\n      return _getUserDetail.apply(this, arguments);\n    }\n    return getUserDetail;\n  }(),\n  getMedicineByName: function () {\n    var _getMedicineByName = _asyncToGenerator(function* (name) {\n      try {\n        var response = yield axios.get(`${BASE_URL}/Medicine/SearchMedicine/${name}`);\n        return response.data;\n      } catch (error) {\n        throw new Error(`Error searching medicine by name: ${error.message}`);\n      }\n    });\n    function getMedicineByName(_x9) {\n      return _getMedicineByName.apply(this, arguments);\n    }\n    return getMedicineByName;\n  }()\n};\nexport default ApiService;","map":{"version":3,"names":["axios","BASE_URL","ApiService","getData","_getData","_asyncToGenerator","response","get","data","error","Error","message","apply","arguments","login","_login","email","password","post","token","_x","_x2","postData","_postData","_x3","getMedicineByCategory","_getMedicineByCategory","categoryId","_x4","getAllCategoriesWithMedicines","_getAllCategoriesWithMedicines","getAllMedicine","_getAllMedicine","getMedicineById","_getMedicineById","id","_x5","checkMedicineInteraction","_checkMedicineInteraction","id1","id2","_x6","_x7","getUserDetail","_getUserDetail","headers","Authorization","_x8","getMedicineByName","_getMedicineByName","name","_x9"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/services/ApiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://localhost:7054/api';\r\n\r\nconst ApiService = {\r\n  getData: async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/endpoint`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  login: async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/User/login`, {\r\n        email: email,\r\n        password: password,\r\n      });\r\n      return response.data.token; // Assuming the token is returned in the response\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  postData: async (data) => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/endpoint`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  getMedicineByCategory: async (categoryId) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/Medicine/GetMedicineByCategory/${categoryId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  getAllCategoriesWithMedicines: async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/Category/GetAllCategoriesWithMedicines`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  getAllMedicine: async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/Medicine/GetAllMedicine`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  getMedicineById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/Medicine/GetMedicineById/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n  \r\n  checkMedicineInteraction: async (id1, id2) => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/Medicine/CheckInteraction`, {\r\n        id1,\r\n        id2,\r\n      });\r\n\r\n      return response.data; // Assuming the response contains interaction details\r\n    } catch (error) {\r\n      throw new Error('Failed to check medicine interaction');\r\n    }\r\n  },\r\n\r\n  getUserDetail: async (token) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/User/GetUserDetail`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Failed to fetch user details');\r\n    }\r\n  },\r\n\r\n  getMedicineByName: async (name) => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/Medicine/SearchMedicine/${name}`);\r\n      return response.data; // Assuming the data returned is an array of medicine matching the name\r\n    } catch (error) {\r\n      throw new Error(`Error searching medicine by name: ${error.message}`);\r\n    }\r\n  },\r\n};\r\n\r\nexport default ApiService;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}