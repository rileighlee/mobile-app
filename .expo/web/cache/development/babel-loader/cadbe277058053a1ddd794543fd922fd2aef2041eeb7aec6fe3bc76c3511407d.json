{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ApiService from \"../services/ApiService\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpScreen = function SignUpScreen() {\n  var navigation = useNavigation();\n  var _useState = useState({\n      fullName: \"\",\n      dateOfBirth: new Date(),\n      contactNumber: \"\",\n      email: \"\",\n      password: \"\",\n      showDatePicker: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserData = _useState2[1];\n  var handleSignUpPress = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield ApiService.registerUser(userData);\n        navigation.navigate(\"Login\");\n      } catch (error) {\n        console.error(\"Error during registration:\", error.message);\n      }\n    });\n    return function handleSignUpPress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleDateChange = function handleDateChange(event, selectedDate) {\n    hideDatePicker();\n    if (selectedDate) {\n      setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n        dateOfBirth: selectedDate\n      }));\n    }\n  };\n  var showDatePicker = function showDatePicker() {\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      showDatePicker: true\n    }));\n  };\n  var hideDatePicker = function hideDatePicker() {\n    setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n      showDatePicker: false\n    }));\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Full Name\",\n      style: styles.input,\n      value: userData.fullName,\n      onChangeText: function onChangeText(text) {\n        return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n          fullName: text\n        }));\n      }\n    }), _jsx(Pressable, {\n      onPress: showDatePicker,\n      children: _jsx(View, {\n        style: styles.dateText,\n        children: _jsx(Text, {\n          style: styles.dateInputText,\n          children: userData.dateOfBirth.toDateString()\n        })\n      })\n    }), userData.showDatePicker && _jsx(DateTimePicker, {\n      value: userData.dateOfBirth,\n      mode: \"date\",\n      display: \"spinner\",\n      onChange: handleDateChange\n    }), _jsx(TextInput, {\n      placeholder: \"Contact Number\",\n      style: styles.input,\n      value: userData.contactNumber,\n      onChangeText: function onChangeText(text) {\n        return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n          contactNumber: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      style: styles.input,\n      value: userData.email,\n      onChangeText: function onChangeText(text) {\n        return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n          email: text\n        }));\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      style: styles.input,\n      secureTextEntry: true,\n      value: userData.password,\n      onChangeText: function onChangeText(text) {\n        return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n          password: text\n        }));\n      }\n    }), _jsx(Pressable, {\n      style: styles.signUpButton,\n      onPress: handleSignUpPress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Sign Up\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"skyblue\",\n    padding: 20,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    elevation: 5\n  },\n  header: {\n    alignItems: \"center\",\n    marginTop: -60\n  },\n  welcomeText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    position: \"absolute\"\n  },\n  form: {\n    marginTop: 40\n  },\n  input: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  signUpButton: {\n    backgroundColor: \"lightblue\",\n    borderRadius: 10,\n    padding: 15,\n    alignItems: \"center\",\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  dateText: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  dateInput: {\n    borderWidth: 0\n  },\n  dateInputText: {\n    fontSize: 16\n  },\n  datePlaceholderText: {\n    fontSize: 16\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","StyleSheet","Platform","useNavigation","ApiService","DateTimePicker","jsx","_jsx","jsxs","_jsxs","SignUpScreen","navigation","_useState","fullName","dateOfBirth","Date","contactNumber","email","password","showDatePicker","_useState2","_slicedToArray","userData","setUserData","handleSignUpPress","_ref","_asyncToGenerator","response","registerUser","navigate","error","console","message","apply","arguments","handleDateChange","event","selectedDate","hideDatePicker","_objectSpread","style","styles","container","children","placeholder","input","value","onChangeText","text","onPress","dateText","dateInputText","toDateString","mode","display","onChange","secureTextEntry","signUpButton","buttonText","create","flex","backgroundColor","padding","justifyContent","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","header","alignItems","marginTop","welcomeText","fontSize","fontWeight","position","form","marginBottom","color","dateInput","borderWidth","datePlaceholderText"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/SignUpScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  StyleSheet,\n  Platform,\n  \n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ApiService from \"../services/ApiService\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nconst SignUpScreen = () => {\n  const navigation = useNavigation();\n  const [userData, setUserData] = useState({\n    fullName: \"\",\n    dateOfBirth: new Date(),\n    contactNumber: \"\",\n    email: \"\",\n    password: \"\",\n    showDatePicker: false, // State to toggle date picker visibility\n  });\n\n  const handleSignUpPress = async () => {\n    try {\n      const response = await ApiService.registerUser(userData);\n      navigation.navigate(\"Login\");\n    } catch (error) {\n      console.error(\"Error during registration:\", error.message);\n      // Handle registration error\n    }\n  };\n\n  const handleDateChange = (event, selectedDate) => {\n    hideDatePicker();\n    if (selectedDate) {\n      setUserData({\n        ...userData,\n        dateOfBirth: selectedDate,\n      });\n    }\n  };\n\n  const showDatePicker = () => {\n    setUserData({ ...userData, showDatePicker: true });\n  };\n\n  const hideDatePicker = () => {\n    setUserData({ ...userData, showDatePicker: false });\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        placeholder=\"Full Name\"\n        style={styles.input}\n        value={userData.fullName}\n        onChangeText={(text) => setUserData({ ...userData, fullName: text })}\n      />\n\n      <Pressable onPress={showDatePicker}>\n        <View style={styles.dateText}>\n          <Text style={styles.dateInputText}>\n            {userData.dateOfBirth.toDateString()}\n          </Text>\n        </View>\n      </Pressable>\n\n      {userData.showDatePicker && (\n        <DateTimePicker\n          value={userData.dateOfBirth}\n          mode=\"date\"\n          display=\"spinner\"\n          onChange={handleDateChange}\n        />\n      )}\n\n      <TextInput\n        placeholder=\"Contact Number\"\n        style={styles.input}\n        value={userData.contactNumber}\n        onChangeText={(text) =>\n          setUserData({ ...userData, contactNumber: text })\n        }\n      />\n      <TextInput\n        placeholder=\"Email\"\n        style={styles.input}\n        value={userData.email}\n        onChangeText={(text) => setUserData({ ...userData, email: text })}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        style={styles.input}\n        secureTextEntry={true}\n        value={userData.password}\n        onChangeText={(text) => setUserData({ ...userData, password: text })}\n      />\n\n      <Pressable style={styles.signUpButton} onPress={handleSignUpPress}>\n        <Text style={styles.buttonText}>Sign Up</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"skyblue\",\n    padding: 20,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    elevation: 5,\n  },\n  header: {\n    alignItems: \"center\",\n    marginTop: -60,\n  },\n  welcomeText: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    position: \"absolute\",\n  },\n  form: {\n    marginTop: 40,\n  },\n  input: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  signUpButton: {\n    backgroundColor: \"lightblue\",\n    borderRadius: 10,\n    padding: 15,\n    alignItems: \"center\",\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  dateText: {\n    // Style for the DatePicker container\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  dateInput: {\n    // Style for the DatePicker input field\n    borderWidth: 0,\n  },\n  dateInputText: {\n    // Style for the DatePicker date text\n    fontSize: 16,\n  },\n  datePlaceholderText: {\n    // Style for the DatePicker placeholder text\n    fontSize: 16,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}