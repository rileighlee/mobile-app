{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MedicineDetails = function MedicineDetails() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCategory = _useState2[0],\n    setSelectedCategory = _useState2[1];\n  var categories = [{\n    title: 'Description',\n    info: 'This is the description of the medicine.'\n  }, {\n    title: 'Dosage and Frequency',\n    info: 'Dosage and frequency information for the medicine.'\n  }, {\n    title: 'Precautions',\n    info: 'Precautionary measures for taking the medicine.'\n  }, {\n    title: 'Overdosage of the medicine',\n    info: 'Information about overdosage of the medicine.'\n  }];\n  var handleCategoryClick = function handleCategoryClick(index) {\n    setSelectedCategory(index === selectedCategory ? null : index);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: categories.map(function (category, index) {\n      return _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleCategoryClick(index);\n        },\n        style: styles.barContainer,\n        children: [_jsx(Text, {\n          style: styles.barTitle,\n          children: category.title\n        }), selectedCategory === index && _jsx(View, {\n          style: styles.infoContainer,\n          children: _jsx(Text, {\n            style: styles.infoText,\n            children: category.info\n          })\n        })]\n      }, index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 100,\n    paddingHorizontal: 20,\n    backgroundColor: '#ffffff'\n  },\n  barContainer: {\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    borderRadius: 10,\n    width: '100%'\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  infoContainer: {\n    marginTop: 10\n  },\n  infoText: {\n    fontSize: 14\n  }\n});\nexport default MedicineDetails;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","MedicineDetails","_useState","_useState2","_slicedToArray","selectedCategory","setSelectedCategory","categories","title","info","handleCategoryClick","index","style","styles","container","children","map","category","onPress","barContainer","barTitle","infoContainer","infoText","create","flex","justifyContent","alignItems","paddingTop","paddingHorizontal","backgroundColor","marginBottom","borderWidth","borderColor","padding","borderRadius","width","fontSize","fontWeight","marginTop"],"sources":["C:/Users/makir/OneDrive/Desktop/Makiramdam_026_41S6/Project/Project/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst MedicineDetails = () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  const categories = [\n    {\n      title: 'Description',\n      info: 'This is the description of the medicine.',\n    },\n    {\n      title: 'Dosage and Frequency',\n      info: 'Dosage and frequency information for the medicine.',\n    },\n    {\n      title: 'Precautions',\n      info: 'Precautionary measures for taking the medicine.',\n    },\n    {\n      title: 'Overdosage of the medicine',\n      info: 'Information about overdosage of the medicine.',\n    },\n  ];\n\n  const handleCategoryClick = (index) => {\n    setSelectedCategory(index === selectedCategory ? null : index);\n  };\n\n  return (\n    <View style={styles.container}>\n      {categories.map((category, index) => (\n        <TouchableOpacity\n          key={index}\n          onPress={() => handleCategoryClick(index)}\n          style={styles.barContainer}\n        >\n          <Text style={styles.barTitle}>{category.title}</Text>\n          {selectedCategory === index && (\n            <View style={styles.infoContainer}>\n              <Text style={styles.infoText}>{category.info}</Text>\n            </View>\n          )}\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 100,\n    paddingHorizontal: 20,\n    backgroundColor: '#ffffff',\n  },\n  barContainer: {\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    borderRadius: 10,\n    width: '100%',\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  infoContainer: {\n    marginTop: 10,\n  },\n  infoText: {\n    fontSize: 14,\n  },\n});\n\nexport default MedicineDetails;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAAC,SAAA,GAAgDV,QAAQ,CAAC,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvDG,gBAAgB,GAAAF,UAAA;IAAEG,mBAAmB,GAAAH,UAAA;EAE5C,IAAMI,UAAU,GAAG,CACjB;IACEC,KAAK,EAAE,aAAa;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACED,KAAK,EAAE,sBAAsB;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACED,KAAK,EAAE,aAAa;IACpBC,IAAI,EAAE;EACR,CAAC,EACD;IACED,KAAK,EAAE,4BAA4B;IACnCC,IAAI,EAAE;EACR,CAAC,CACF;EAED,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAK,EAAK;IACrCL,mBAAmB,CAACK,KAAK,KAAKN,gBAAgB,GAAG,IAAI,GAAGM,KAAK,CAAC;EAChE,CAAC;EAED,OACEb,IAAA,CAACL,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC3BR,UAAU,CAACS,GAAG,CAAC,UAACC,QAAQ,EAAEN,KAAK;MAAA,OAC9BX,KAAA,CAACL,gBAAgB;QAEfuB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMR,mBAAmB,CAACC,KAAK,CAAC;QAAA,CAAC;QAC1CC,KAAK,EAAEC,MAAM,CAACM,YAAa;QAAAJ,QAAA,GAE3BjB,IAAA,CAACJ,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACO,QAAS;UAAAL,QAAA,EAAEE,QAAQ,CAACT;QAAK,CAAO,CAAC,EACpDH,gBAAgB,KAAKM,KAAK,IACzBb,IAAA,CAACL,IAAI;UAACmB,KAAK,EAAEC,MAAM,CAACQ,aAAc;UAAAN,QAAA,EAChCjB,IAAA,CAACJ,IAAI;YAACkB,KAAK,EAAEC,MAAM,CAACS,QAAS;YAAAP,QAAA,EAAEE,QAAQ,CAACR;UAAI,CAAO;QAAC,CAChD,CACP;MAAA,GATIE,KAUW,CAAC;IAAA,CACpB;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAME,MAAM,GAAGjB,UAAU,CAAC2B,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,UAAU,EAAE,GAAG;IACfC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE;EACnB,CAAC;EACDV,YAAY,EAAE;IACZW,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDf,QAAQ,EAAE;IACRgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBP,YAAY,EAAE;EAChB,CAAC;EACDT,aAAa,EAAE;IACbiB,SAAS,EAAE;EACb,CAAC;EACDhB,QAAQ,EAAE;IACRc,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAenC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}