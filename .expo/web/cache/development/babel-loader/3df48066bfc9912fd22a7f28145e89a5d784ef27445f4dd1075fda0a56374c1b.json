{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPassword = function ForgotPassword() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newPassword = _useState4[0],\n    setNewPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var handleResetPassword = function handleResetPassword() {\n    if (email && newPassword === confirmPassword) {\n      navigation.navigate('Login');\n      Keyboard.dismiss();\n    } else {}\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Reset Password\"\n      })\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.subtitle,\n        children: \"Enter your email, new password, and confirm it.\"\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        style: styles.input,\n        keyboardType: \"email-address\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"New Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: newPassword,\n        onChangeText: function onChangeText(text) {\n          return setNewPassword(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Confirm Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: confirmPassword,\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        }\n      }), _jsx(Pressable, {\n        style: styles.resetButton,\n        onPress: handleResetPassword,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Reset Password\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'skyblue',\n    padding: 20,\n    justifyContent: 'center',\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    elevation: 5\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  form: {},\n  subtitle: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15\n  },\n  resetButton: {\n    backgroundColor: 'lightblue',\n    borderRadius: 10,\n    padding: 15,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default ForgotPassword;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","StyleSheet","Keyboard","useNavigation","jsx","_jsx","jsxs","_jsxs","ForgotPassword","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","newPassword","setNewPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","handleResetPassword","navigate","dismiss","style","styles","container","children","header","title","form","subtitle","placeholder","input","keyboardType","value","onChangeText","text","secureTextEntry","resetButton","onPress","buttonText","create","flex","backgroundColor","padding","justifyContent","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","alignItems","marginBottom","fontSize","fontWeight","color"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Pressable, StyleSheet, Keyboard } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst ForgotPassword = () => {\n  const navigation = useNavigation();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleResetPassword = () => {\n    // Add validation logic before updating the password\n    if (email && newPassword === confirmPassword) {\n      // Implement logic to update the password in your backend\n      // For simplicity, let's just navigate back to the login screen.\n      // You can replace this with your actual password update logic.\n\n      // Assuming successful password reset, navigate back to the login screen\n      navigation.navigate('Login');\n      \n      // Close the keyboard (optional)\n      Keyboard.dismiss();\n    } else {\n      // Handle missing email or password mismatch error\n      // You can display an error message to the user\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Reset Password</Text>\n      </View>\n      <View style={styles.form}>\n        <Text style={styles.subtitle}>\n          Enter your email, new password, and confirm it.\n        </Text>\n        <TextInput\n          placeholder=\"Email\"\n          style={styles.input}\n          keyboardType=\"email-address\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <TextInput\n          placeholder=\"New Password\"\n          style={styles.input}\n          secureTextEntry={true}\n          value={newPassword}\n          onChangeText={(text) => setNewPassword(text)}\n        />\n        <TextInput\n          placeholder=\"Confirm Password\"\n          style={styles.input}\n          secureTextEntry={true}\n          value={confirmPassword}\n          onChangeText={(text) => setConfirmPassword(text)}\n        />\n        <Pressable style={styles.resetButton} onPress={handleResetPassword}>\n          <Text style={styles.buttonText}>Reset Password</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'skyblue',\n    padding: 20,\n    justifyContent: 'center',\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    elevation: 5,\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black', // Change text color to black\n  },\n  form: {},\n  subtitle: {\n    fontSize: 16,\n    color: 'black',\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15,\n  },\n  resetButton: {\n    backgroundColor: 'lightblue',\n    borderRadius: 10,\n    padding: 15,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n\nexport default ForgotPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}