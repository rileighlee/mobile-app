{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CalendarScreen = function CalendarScreen(_ref) {\n  var route = _ref.route;\n  var addCalendarEvent = route.params.addCalendarEvent;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    event = _useState2[0],\n    setEvent = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    date = _useState4[0],\n    setDate = _useState4[1];\n  var handleAddEvent = function handleAddEvent() {\n    if (date && event) {\n      addCalendarEvent(date, event);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Add Calendar Event\"\n    }), _jsx(TextInput, {\n      placeholder: \"Event\",\n      value: event,\n      onChangeText: setEvent\n    }), _jsx(TextInput, {\n      placeholder: \"Date (YYYY-MM-DD)\",\n      value: date,\n      onChangeText: setDate\n    }), _jsx(Pressable, {\n      onPress: handleAddEvent,\n      style: styles.addButton,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add Event\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  addButton: {\n    backgroundColor: '#00F1C6',\n    padding: 10,\n    borderRadius: 8\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16\n  }\n});\nexport default CalendarScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","StyleSheet","jsx","_jsx","jsxs","_jsxs","CalendarScreen","_ref","route","addCalendarEvent","params","_useState","_useState2","_slicedToArray","event","setEvent","_useState3","_useState4","date","setDate","handleAddEvent","style","styles","container","children","title","placeholder","value","onChangeText","onPress","addButton","buttonText","create","flex","alignItems","justifyContent","backgroundColor","fontSize","marginBottom","padding","borderRadius","color"],"sources":["C:/Users/makir/OneDrive/Desktop/MEDI_ALERT/Tabs/CalendarScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Pressable, StyleSheet } from 'react-native';\r\n\r\nconst CalendarScreen = ({ route }) => {\r\n  const { addCalendarEvent } = route.params;\r\n  const [event, setEvent] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  const handleAddEvent = () => {\r\n    if (date && event) {\r\n      addCalendarEvent(date, event);\r\n      // Optionally, you can navigate back to the home screen or perform any other action\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Add Calendar Event</Text>\r\n      <TextInput\r\n        placeholder=\"Event\"\r\n        value={event}\r\n        onChangeText={setEvent}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Date (YYYY-MM-DD)\"\r\n        value={date}\r\n        onChangeText={setDate}\r\n      />\r\n      <Pressable onPress={handleAddEvent} style={styles.addButton}>\r\n        <Text style={styles.buttonText}>Add Event</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n  },\r\n  addButton: {\r\n    backgroundColor: '#00F1C6',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default CalendarScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC7B,IAAQC,gBAAgB,GAAKD,KAAK,CAACE,MAAM,CAAjCD,gBAAgB;EACxB,IAAAE,SAAA,GAA0Bf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAwBpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAEpB,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAIF,IAAI,IAAIJ,KAAK,EAAE;MACjBL,gBAAgB,CAACS,IAAI,EAAEJ,KAAK,CAAC;IAE/B;EACF,CAAC;EAED,OACET,KAAA,CAACR,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrB,IAAA,CAACL,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAkB,CAAM,CAAC,EACpDrB,IAAA,CAACJ,SAAS;MACR2B,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEb,KAAM;MACbc,YAAY,EAAEb;IAAS,CACxB,CAAC,EACFZ,IAAA,CAACJ,SAAS;MACR2B,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAET,IAAK;MACZU,YAAY,EAAET;IAAQ,CACvB,CAAC,EACFhB,IAAA,CAACH,SAAS;MAAC6B,OAAO,EAAET,cAAe;MAACC,KAAK,EAAEC,MAAM,CAACQ,SAAU;MAAAN,QAAA,EAC1DrB,IAAA,CAACL,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACS,UAAW;QAAAP,QAAA,EAAC;MAAS,CAAM;IAAC,CACvC,CAAC;EAAA,CACR,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGrB,UAAU,CAAC+B,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE;EACnB,CAAC;EACDX,KAAK,EAAE;IACLY,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDR,SAAS,EAAE;IACTM,eAAe,EAAE,SAAS;IAC1BG,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACDT,UAAU,EAAE;IACVU,KAAK,EAAE,OAAO;IACdJ,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAe/B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}