{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenHeight = _Dimensions$get.height;\nvar MedicineInteractionChecker = function MedicineInteractionChecker() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicines = _useState2[0],\n    setMedicines = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMedicine1 = _useState4[0],\n    setSelectedMedicine1 = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMedicine2 = _useState6[0],\n    setSelectedMedicine2 = _useState6[1];\n  useEffect(function () {\n    fetchMedicines();\n  }, []);\n  var fetchMedicines = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var medicineList = yield ApiService.getAllMedicine();\n        setMedicines(medicineList);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchMedicines() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleCheckInteraction = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (selectedMedicine1 && selectedMedicine2) {\n        try {\n          var interactionResult = yield ApiService.checkMedicineInteraction(selectedMedicine1, selectedMedicine2);\n          console.log('Interaction Result:', interactionResult);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    });\n    return function handleCheckInteraction() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.logoBackground,\n        children: _jsx(Image, {\n          source: require(\"../assets/comparing.png\"),\n          style: styles.logo\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Medicine Interaction Checker\"\n      })]\n    }), _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [_jsxs(Picker, {\n        selectedValue: selectedMedicine1,\n        onValueChange: function onValueChange(itemValue) {\n          return setSelectedMedicine1(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Select Medicine 1\",\n          value: null\n        }), medicines.map(function (medicine) {\n          return _jsx(Picker.Item, {\n            label: medicine.name,\n            value: medicine.id\n          }, medicine.id);\n        })]\n      }), _jsxs(Picker, {\n        selectedValue: selectedMedicine2,\n        onValueChange: function onValueChange(itemValue) {\n          return setSelectedMedicine2(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Select Medicine 2\",\n          value: null\n        }), medicines.map(function (medicine) {\n          return _jsx(Picker.Item, {\n            label: medicine.name,\n            value: medicine.id\n          }, medicine.id);\n        })]\n      }), _jsx(Button, {\n        title: \"Check Interaction\",\n        onPress: handleCheckInteraction\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA0D2'\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: 'center',\n    backgroundColor: '#FFC8E5',\n    alignItems: 'center',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'cover'\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#FFA0D2'\n  }\n});\nexport default MedicineInteractionChecker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","Dimensions","Picker","Button","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineInteractionChecker","_useState","_useState2","_slicedToArray","medicines","setMedicines","_useState3","_useState4","selectedMedicine1","setSelectedMedicine1","_useState5","_useState6","selectedMedicine2","setSelectedMedicine2","fetchMedicines","_ref","_asyncToGenerator","medicineList","getAllMedicine","error","console","apply","arguments","handleCheckInteraction","_ref2","interactionResult","checkMedicineInteraction","log","style","styles","container","children","upperHalf","logoBackground","source","require","logo","title","lowerHalf","selectedValue","onValueChange","itemValue","Item","label","value","map","medicine","name","id","onPress","create","flex","backgroundColor","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","width","borderRadius","resizeMode","paddingHorizontal","paddingTop","fontSize","fontWeight","marginBottom","color"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/MedicineInteractionChecker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Image, StyleSheet, Dimensions, Picker, Button } from 'react-native';\nimport ApiService from '../services/ApiService';\n\nconst { height: screenHeight } = Dimensions.get('window');\n\nconst MedicineInteractionChecker = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedicine1, setSelectedMedicine1] = useState(null);\n  const [selectedMedicine2, setSelectedMedicine2] = useState(null);\n\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const medicineList = await ApiService.getAllMedicine();\n      setMedicines(medicineList);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const handleCheckInteraction = async () => {\n    if (selectedMedicine1 && selectedMedicine2) {\n      try {\n        const interactionResult = await ApiService.checkMedicineInteraction(\n          selectedMedicine1,\n          selectedMedicine2\n        );\n        console.log('Interaction Result:', interactionResult);\n        // Handle the interaction result as needed\n      } catch (error) {\n        console.error(error);\n        // Handle error\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.logoBackground}>\n          <Image source={require('../assets/comparing.png')} style={styles.logo} />\n        </View>\n        <Text style={styles.title}>Medicine Interaction Checker</Text>\n      </View>\n      <View style={styles.lowerHalf}>\n        <Picker\n          selectedValue={selectedMedicine1}\n          onValueChange={(itemValue) => setSelectedMedicine1(itemValue)}\n        >\n          <Picker.Item label=\"Select Medicine 1\" value={null} />\n          {medicines.map((medicine) => (\n            <Picker.Item label={medicine.name} value={medicine.id} key={medicine.id} />\n          ))}\n        </Picker>\n        <Picker\n          selectedValue={selectedMedicine2}\n          onValueChange={(itemValue) => setSelectedMedicine2(itemValue)}\n        >\n          <Picker.Item label=\"Select Medicine 2\" value={null} />\n          {medicines.map((medicine) => (\n            <Picker.Item label={medicine.name} value={medicine.id} key={medicine.id} />\n          ))}\n        </Picker>\n        <Button title=\"Check Interaction\" onPress={handleCheckInteraction} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA0D2',\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: 'center',\n    backgroundColor: '#FFC8E5',\n    alignItems: 'center',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'cover',\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#FFA0D2',\n  },\n});\n\nexport default MedicineInteractionChecker;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,MAAA;AAEnD,OAAOC,UAAU;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAAC,eAAA,GAAiCR,UAAU,CAACS,GAAG,CAAC,QAAQ,CAAC;EAAzCC,YAAY,GAAAF,eAAA,CAApBG,MAAM;AAEd,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAA,EAAS;EACvC,IAAAC,SAAA,GAAkCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAkDxB,QAAQ,CAAC,IAAI,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzDE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAC9C,IAAAG,UAAA,GAAkD5B,QAAQ,CAAC,IAAI,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzDE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAE9C5B,SAAS,CAAC,YAAM;IACd+B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,cAAc;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACjC,IAAI;QACF,IAAMC,YAAY,SAAS1B,UAAU,CAAC2B,cAAc,CAAC,CAAC;QACtDb,YAAY,CAACY,YAAY,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAEtB;IACF,CAAC;IAAA,gBARKL,cAAcA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQnB;EAED,IAAMC,sBAAsB;IAAA,IAAAC,KAAA,GAAAR,iBAAA,CAAG,aAAY;MACzC,IAAIR,iBAAiB,IAAII,iBAAiB,EAAE;QAC1C,IAAI;UACF,IAAMa,iBAAiB,SAASlC,UAAU,CAACmC,wBAAwB,CACjElB,iBAAiB,EACjBI,iBACF,CAAC;UACDQ,OAAO,CAACO,GAAG,CAAC,qBAAqB,EAAEF,iBAAiB,CAAC;QAEvD,CAAC,CAAC,OAAON,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QAEtB;MACF;IACF,CAAC;IAAA,gBAdKI,sBAAsBA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAc3B;EAED,OACE3B,KAAA,CAACX,IAAI;IAAC4C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpC,KAAA,CAACX,IAAI;MAAC4C,KAAK,EAAEC,MAAM,CAACG,SAAU;MAAAD,QAAA,GAC5BtC,IAAA,CAACT,IAAI;QAAC4C,KAAK,EAAEC,MAAM,CAACI,cAAe;QAAAF,QAAA,EACjCtC,IAAA,CAACP,KAAK;UAACgD,MAAM,EAAEC,OAAO,0BAA0B,CAAE;UAACP,KAAK,EAAEC,MAAM,CAACO;QAAK,CAAE;MAAC,CACrE,CAAC,EACP3C,IAAA,CAACR,IAAI;QAAC2C,KAAK,EAAEC,MAAM,CAACQ,KAAM;QAAAN,QAAA,EAAC;MAA4B,CAAM,CAAC;IAAA,CAC1D,CAAC,EACPpC,KAAA,CAACX,IAAI;MAAC4C,KAAK,EAAEC,MAAM,CAACS,SAAU;MAAAP,QAAA,GAC5BpC,KAAA,CAACN,MAAM;QACLkD,aAAa,EAAE/B,iBAAkB;QACjCgC,aAAa,EAAE,SAAAA,cAACC,SAAS;UAAA,OAAKhC,oBAAoB,CAACgC,SAAS,CAAC;QAAA,CAAC;QAAAV,QAAA,GAE9DtC,IAAA,CAACJ,MAAM,CAACqD,IAAI;UAACC,KAAK,EAAC,mBAAmB;UAACC,KAAK,EAAE;QAAK,CAAE,CAAC,EACrDxC,SAAS,CAACyC,GAAG,CAAC,UAACC,QAAQ;UAAA,OACtBrD,IAAA,CAACJ,MAAM,CAACqD,IAAI;YAACC,KAAK,EAAEG,QAAQ,CAACC,IAAK;YAACH,KAAK,EAAEE,QAAQ,CAACE;UAAG,GAAMF,QAAQ,CAACE,EAAK,CAAC;QAAA,CAC5E,CAAC;MAAA,CACI,CAAC,EACTrD,KAAA,CAACN,MAAM;QACLkD,aAAa,EAAE3B,iBAAkB;QACjC4B,aAAa,EAAE,SAAAA,cAACC,SAAS;UAAA,OAAK5B,oBAAoB,CAAC4B,SAAS,CAAC;QAAA,CAAC;QAAAV,QAAA,GAE9DtC,IAAA,CAACJ,MAAM,CAACqD,IAAI;UAACC,KAAK,EAAC,mBAAmB;UAACC,KAAK,EAAE;QAAK,CAAE,CAAC,EACrDxC,SAAS,CAACyC,GAAG,CAAC,UAACC,QAAQ;UAAA,OACtBrD,IAAA,CAACJ,MAAM,CAACqD,IAAI;YAACC,KAAK,EAAEG,QAAQ,CAACC,IAAK;YAACH,KAAK,EAAEE,QAAQ,CAACE;UAAG,GAAMF,QAAQ,CAACE,EAAK,CAAC;QAAA,CAC5E,CAAC;MAAA,CACI,CAAC,EACTvD,IAAA,CAACH,MAAM;QAAC+C,KAAK,EAAC,mBAAmB;QAACY,OAAO,EAAE1B;MAAuB,CAAE,CAAC;IAAA,CACjE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMM,MAAM,GAAG1C,UAAU,CAAC+D,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDpB,SAAS,EAAE;IACTjC,MAAM,EAAED,YAAY,GAAG,GAAG;IAC1BuD,cAAc,EAAE,QAAQ;IACxBD,eAAe,EAAE,SAAS;IAC1BE,UAAU,EAAE,QAAQ;IACpBC,sBAAsB,EAAE,EAAE;IAC1BC,uBAAuB,EAAE;EAC3B,CAAC;EACDvB,cAAc,EAAE;IACdwB,KAAK,EAAE,GAAG;IACV1D,MAAM,EAAE,GAAG;IACXqD,eAAe,EAAE,OAAO;IACxBM,YAAY,EAAE,EAAE;IAChBJ,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB,CAAC;EACDjB,IAAI,EAAE;IACJqB,KAAK,EAAE,EAAE;IACT1D,MAAM,EAAE,EAAE;IACV4D,UAAU,EAAE;EACd,CAAC;EACDrB,SAAS,EAAE;IACTsB,iBAAiB,EAAE,EAAE;IACrBC,UAAU,EAAE;EACd,CAAC;EACDxB,KAAK,EAAE;IACLyB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAejE,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}