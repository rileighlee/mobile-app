{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenHeight = _Dimensions$get.height;\nvar MedicineDetails = function MedicineDetails(_ref) {\n  var route = _ref.route;\n  var medicineId = route.params.medicineId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicineDetails = _useState2[0],\n    setMedicineDetails = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    expandedSections = _useState4[0],\n    setExpandedSections = _useState4[1];\n  useEffect(function () {\n    fetchMedicineDetails();\n  }, []);\n  var fetchMedicineDetails = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield ApiService.getMedicineById(medicineId);\n        setMedicineDetails(data);\n        initializeExpandedSections(data.categories);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchMedicineDetails() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var initializeExpandedSections = function initializeExpandedSections(categories) {\n    var initialExpandedState = {};\n    categories.forEach(function (_, index) {\n      initialExpandedState[index] = false;\n    });\n    setExpandedSections(initialExpandedState);\n  };\n  var toggleSection = function toggleSection(index) {\n    setExpandedSections(_objectSpread(_objectSpread({}, expandedSections), {}, _defineProperty({}, index, !expandedSections[index])));\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.leftContent,\n        children: _jsx(Image, {\n          source: require(\"../assets/human.png\"),\n          style: styles.humanImage\n        })\n      }), _jsxs(View, {\n        style: styles.rightContent,\n        children: [_jsx(Image, {\n          source: medicineDetails == null ? void 0 : medicineDetails.image,\n          style: styles.medicineImage\n        }), _jsx(Text, {\n          style: styles.medicineName,\n          children: medicineDetails == null ? void 0 : medicineDetails.name\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [medicineDetails && medicineDetails.categories && _jsx(View, {\n        children: medicineDetails.categories.map(function (category, index) {\n          return _jsxs(View, {\n            children: [_jsx(Pressable, {\n              onPress: function onPress() {\n                return toggleSection(index);\n              },\n              style: styles.barContainer,\n              children: _jsxs(View, {\n                style: styles.barTitleContainer,\n                children: [_jsx(Text, {\n                  style: styles.barTitle,\n                  children: category.title\n                }), _jsx(Text, {\n                  style: styles.downArrow,\n                  children: expandedSections[index] ? '▲' : '▼'\n                })]\n              })\n            }), expandedSections[index] && _jsx(View, {\n              style: styles.infoContainer,\n              children: _jsx(Text, {\n                style: styles.infoText,\n                children: category.info\n              })\n            })]\n          }, index);\n        })\n      }), _jsx(Text, {\n        style: styles.consultDoctorText,\n        children: \"If symptoms persist, consult your doctor.\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#00F1C6'\n  },\n  upperHalf: {\n    height: screenHeight * 0.4,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#89fff8',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  lowerHalf: {\n    marginTop: 10,\n    flex: 1,\n    paddingHorizontal: 20\n  },\n  leftContent: {\n    flex: 1,\n    alignItems: 'flex-start'\n  },\n  rightContent: {\n    flex: 1,\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  humanImage: {\n    position: 'relative',\n    marginBottom: -100,\n    marginLeft: -4,\n    width: 170,\n    height: 170,\n    resizeMode: 'cover'\n  },\n  medicineImage: {\n    marginRight: 50,\n    width: 80,\n    height: 80,\n    resizeMode: 'cover'\n  },\n  medicineName: {\n    marginRight: 50,\n    marginTop: 5,\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  barContainer: {\n    marginBottom: 10,\n    borderColor: '#ccc',\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    fontStyle: 'italic'\n  },\n  barTitleContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline'\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: 'italic',\n    marginBottom: 5\n  },\n  downArrow: {\n    fontSize: 12\n  },\n  infoContainer: {\n    marginTop: 10\n  },\n  infoText: {\n    fontSize: 14\n  },\n  consultDoctorText: {\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 14,\n    fontStyle: 'italic',\n    color: '#555'\n  }\n});\nexport default MedicineDetails;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","Pressable","StyleSheet","Dimensions","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineDetails","_ref","route","medicineId","params","_useState","_useState2","_slicedToArray","medicineDetails","setMedicineDetails","_useState3","_useState4","expandedSections","setExpandedSections","fetchMedicineDetails","_ref2","_asyncToGenerator","data","getMedicineById","initializeExpandedSections","categories","error","console","apply","arguments","initialExpandedState","forEach","_","index","toggleSection","_objectSpread","_defineProperty","style","styles","container","children","upperHalf","leftContent","source","require","humanImage","rightContent","image","medicineImage","medicineName","name","lowerHalf","map","category","onPress","barContainer","barTitleContainer","barTitle","title","downArrow","infoContainer","infoText","info","consultDoctorText","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","marginTop","paddingHorizontal","position","marginBottom","marginLeft","width","resizeMode","marginRight","fontSize","fontWeight","borderColor","padding","borderRadius","fontStyle","textAlign","color"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/MedicineDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Image, Pressable, StyleSheet, Dimensions } from 'react-native';\nimport ApiService from '../services/ApiService';\n\nconst { height: screenHeight } = Dimensions.get('window');\n\nconst MedicineDetails = ({ route }) => {\n  const { medicineId } = route.params;\n  const [medicineDetails, setMedicineDetails] = useState(null);\n  const [expandedSections, setExpandedSections] = useState({});\n\n  useEffect(() => {\n    fetchMedicineDetails();\n  }, []);\n\n  const fetchMedicineDetails = async () => {\n    try {\n      const data = await ApiService.getMedicineById(medicineId);\n      setMedicineDetails(data);\n      initializeExpandedSections(data.categories);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const initializeExpandedSections = (categories) => {\n    const initialExpandedState = {};\n    categories.forEach((_, index) => {\n      initialExpandedState[index] = false;\n    });\n    setExpandedSections(initialExpandedState);\n  };\n\n  const toggleSection = (index) => {\n    setExpandedSections({\n      ...expandedSections,\n      [index]: !expandedSections[index],\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.leftContent}>\n          <Image source={require('../assets/human.png')} style={styles.humanImage} />\n        </View>\n        <View style={styles.rightContent}>\n          <Image source={medicineDetails?.image} style={styles.medicineImage} />\n          <Text style={styles.medicineName}>{medicineDetails?.name}</Text>\n        </View>\n      </View>\n      <View style={styles.lowerHalf}>\n        {medicineDetails && medicineDetails.categories && (\n          <View>\n            {medicineDetails.categories.map((category, index) => (\n              <View key={index}>\n                <Pressable\n                  onPress={() => toggleSection(index)}\n                  style={styles.barContainer}\n                >\n                  <View style={styles.barTitleContainer}>\n                    <Text style={styles.barTitle}>{category.title}</Text>\n                    <Text style={styles.downArrow}>\n                      {expandedSections[index] ? '▲' : '▼'}\n                    </Text>\n                  </View>\n                </Pressable>\n                {expandedSections[index] && (\n                  <View style={styles.infoContainer}>\n                    <Text style={styles.infoText}>{category.info}</Text>\n                  </View>\n                )}\n              </View>\n            ))}\n          </View>\n        )}\n        <Text style={styles.consultDoctorText}>\n          If symptoms persist, consult your doctor.\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#00F1C6',\n  },\n  upperHalf: {\n    height: screenHeight * 0.4,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#89fff8',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  lowerHalf: {\n    marginTop: 10,\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  leftContent: {\n    flex: 1,\n    alignItems: 'flex-start',\n  },\n  rightContent: {\n    flex: 1,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n  },\n  humanImage: {\n    position: 'relative',\n    marginBottom: -100,\n    marginLeft: -4,\n    width: 170,\n    height: 170,\n    resizeMode: 'cover',\n    \n  },\n  medicineImage: {\n    marginRight: 50,\n    width: 80,\n    height: 80,\n    resizeMode: 'cover',\n  },\n  medicineName: {\n    marginRight: 50,\n    marginTop: 5,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  barContainer: {\n    marginBottom: 10,\n    borderColor: '#ccc',\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    fontStyle: 'italic',\n  },\n  barTitleContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: 'italic',\n    marginBottom: 5,\n  },\n  downArrow: {\n    fontSize: 12,\n  },\n  infoContainer: {\n    marginTop: 10,\n  },\n  infoText: {\n    fontSize: 14,\n  },\n  consultDoctorText: {\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 14,\n    fontStyle: 'italic',\n    color: '#555',\n  },\n});\n\nexport default MedicineDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}