{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenHeight = _Dimensions$get.height;\nvar MedicineInteractionChecker = function MedicineInteractionChecker() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicines = _useState2[0],\n    setMedicines = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMedicine1 = _useState4[0],\n    setSelectedMedicine1 = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMedicine2 = _useState6[0],\n    setSelectedMedicine2 = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    interactionResult = _useState8[0],\n    setInteractionResult = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showDropdown1 = _useState10[0],\n    setShowDropdown1 = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showDropdown2 = _useState12[0],\n    setShowDropdown2 = _useState12[1];\n  useEffect(function () {\n    fetchMedicines();\n  }, []);\n  var fetchMedicines = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var medicineList = yield ApiService.getAllMedicine();\n        var translatedMedicineList = medicineList.map(function (item) {\n          return {\n            label: item.name,\n            value: item.id\n          };\n        });\n        setMedicines(translatedMedicineList);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchMedicines() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleCheckInteraction = function () {\n    var _ref2 = _asyncToGenerator(function* () {});\n    return function handleCheckInteraction() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var selectMedicine1 = function selectMedicine1(item) {\n    setSelectedMedicine1(item);\n    setShowDropdown1(false);\n  };\n  var selectMedicine2 = function selectMedicine2(item) {\n    setSelectedMedicine2(item);\n    setShowDropdown2(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.logoBackground,\n        children: _jsx(Image, {\n          source: require(\"../assets/comparing.png\"),\n          style: styles.logo\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Medicine Interaction Checker\"\n      })]\n    }), _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.dropdown,\n        onPress: function onPress() {\n          return setShowDropdown1(!showDropdown1);\n        },\n        children: _jsx(Text, {\n          children: (selectedMedicine1 == null ? void 0 : selectedMedicine1.label) || \"Select Medicine 1\"\n        })\n      }), showDropdown1 && _jsx(View, {\n        style: styles.dropdownOptions,\n        children: medicines.map(function (medicine) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return selectMedicine1(medicine);\n            },\n            children: _jsx(Text, {\n              children: medicine.label\n            })\n          }, medicine.value);\n        })\n      }), _jsx(Button, {\n        title: \"Check Interaction\",\n        onPress: handleCheckInteraction\n      }), _jsxs(Text, {\n        style: styles.interactionText,\n        children: [\"Interaction: \", interactionResult]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFA0D2\"\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#FFC8E5\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\"\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFA0D2\"\n  },\n  dropdownContainer: {\n    marginTop: 10\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: \"#FAF9F8\",\n    borderColor: \"#ddd\",\n    borderBottomWidth: 1\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: \"#000\"\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default MedicineInteractionChecker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","Dimensions","Button","TouchableOpacity","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineInteractionChecker","_useState","_useState2","_slicedToArray","medicines","setMedicines","_useState3","_useState4","selectedMedicine1","setSelectedMedicine1","_useState5","_useState6","selectedMedicine2","setSelectedMedicine2","_useState7","_useState8","interactionResult","setInteractionResult","_useState9","_useState10","showDropdown1","setShowDropdown1","_useState11","_useState12","showDropdown2","setShowDropdown2","fetchMedicines","_ref","_asyncToGenerator","medicineList","getAllMedicine","translatedMedicineList","map","item","label","name","value","id","error","console","apply","arguments","handleCheckInteraction","_ref2","selectMedicine1","selectMedicine2","style","styles","container","children","upperHalf","logoBackground","source","require","logo","title","lowerHalf","dropdown","onPress","dropdownOptions","medicine","interactionText","create","flex","backgroundColor","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","width","borderRadius","resizeMode","paddingHorizontal","paddingTop","fontSize","fontWeight","marginBottom","color","dropdownContainer","marginTop","dropdownItem","padding","borderColor","borderBottomWidth","dropdownItemText","searchInput","borderWidth"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/MedicineInteractionChecker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Dimensions,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\nimport ApiService from \"../services/ApiService\";\n\nconst { height: screenHeight } = Dimensions.get(\"window\");\n\nconst MedicineInteractionChecker = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedicine1, setSelectedMedicine1] = useState(null);\n  const [selectedMedicine2, setSelectedMedicine2] = useState(null);\n  const [interactionResult, setInteractionResult] = useState('');\n  const [showDropdown1, setShowDropdown1] = useState(false);\n  const [showDropdown2, setShowDropdown2] = useState(false);\n\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const medicineList = await ApiService.getAllMedicine();\n      const translatedMedicineList = medicineList.map((item) => ({\n        label: item.name,\n        value: item.id,\n      }));\n      setMedicines(translatedMedicineList);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const handleCheckInteraction = async () => {\n    // Handle interaction check similarly to previous implementations\n  };\n\n  const selectMedicine1 = (item) => {\n    setSelectedMedicine1(item);\n    setShowDropdown1(false);\n  };\n\n  const selectMedicine2 = (item) => {\n    setSelectedMedicine2(item);\n    setShowDropdown2(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.logoBackground}>\n          <Image\n            source={require(\"../assets/comparing.png\")}\n            style={styles.logo}\n          />\n        </View>\n        <Text style={styles.title}>Medicine Interaction Checker</Text>\n      </View>\n      <View style={styles.lowerHalf}>\n        <TouchableOpacity\n          style={styles.dropdown}\n          onPress={() => setShowDropdown1(!showDropdown1)}\n        >\n          <Text>{selectedMedicine1?.label || \"Select Medicine 1\"}</Text>\n        </TouchableOpacity>\n        {showDropdown1 && (\n          <View style={styles.dropdownOptions}>\n            {medicines.map((medicine) => (\n              <TouchableOpacity\n                key={medicine.value}\n                onPress={() => selectMedicine1(medicine)}\n              >\n                <Text>{medicine.label}</Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        )}\n        {/* Similar structure for Medicine 2 dropdown */}\n        <Button title=\"Check Interaction\" onPress={handleCheckInteraction} />\n        <Text style={styles.interactionText}>\n          Interaction: {interactionResult}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFA0D2\",\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#FFC8E5\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\",\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFA0D2\",\n  },\n  dropdownContainer: {\n    marginTop: 10,\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: \"#FAF9F8\",\n    borderColor: \"#ddd\",\n    borderBottomWidth: 1,\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: \"#000\",\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    backgroundColor: \"#fff\",\n  },\n});\n\nexport default MedicineInteractionChecker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}