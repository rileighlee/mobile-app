{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = React.createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var saveToken = function saveToken(userToken) {\n    setToken(userToken);\n  };\n  return _jsx(AuthContext.Provider, {\n    value: {\n      token: token,\n      saveToken: saveToken\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","AuthContext","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","token","setToken","saveToken","userToken","Provider","value"],"sources":["C:/Users/makir/OneDrive/Desktop/mobile app/services/Auth.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\n// Create context for authentication\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(null);\r\n\r\n  const saveToken = (userToken) => {\r\n    setToken(userToken);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, saveToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGvD,OAAO,IAAMC,WAAW,GAAGL,KAAK,CAACC,aAAa,CAAC,CAAC;AAEhD,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAA0BP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAIC,SAAS,EAAK;IAC/BF,QAAQ,CAACE,SAAS,CAAC;EACrB,CAAC;EAED,OACEX,IAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK,EAALA,KAAK;MAAEE,SAAS,EAATA;IAAU,CAAE;IAAAN,QAAA,EAC/CA;EAAQ,CACW,CAAC;AAE3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}