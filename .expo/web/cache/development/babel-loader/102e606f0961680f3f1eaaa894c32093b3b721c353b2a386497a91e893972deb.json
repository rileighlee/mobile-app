{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenHeight = _Dimensions$get.height;\nvar MedicineInteractionChecker = function MedicineInteractionChecker() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicines = _useState2[0],\n    setMedicines = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMedicine1 = _useState4[0],\n    setSelectedMedicine1 = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMedicine2 = _useState6[0],\n    setSelectedMedicine2 = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    filteredMedicines = _useState8[0],\n    setFilteredMedicines = _useState8[1];\n  useEffect(function () {\n    fetchMedicines();\n  }, []);\n  var fetchMedicines = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var medicineList = yield ApiService.getAllMedicine();\n        var translatedMedicineList = medicineList.map(function (item) {\n          return {\n            id: item.id,\n            name: item.name,\n            value: item.id\n          };\n        });\n        setMedicines(translatedMedicineList);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchMedicines() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleCheckInteraction = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (selectedMedicine1 && selectedMedicine2) {\n        try {\n          var interactionResult = yield ApiService.checkMedicineInteraction(selectedMedicine1.id, selectedMedicine2.id);\n          console.log(\"Interaction Result:\", interactionResult);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    });\n    return function handleCheckInteraction() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleMedicine1Change = function handleMedicine1Change(text) {\n    setSelectedMedicine1(text);\n    filterMedicines(text);\n  };\n  var handleMedicine2Change = function handleMedicine2Change(text) {\n    setSelectedMedicine2(text);\n    filterMedicines(text);\n  };\n  var filterMedicines = function filterMedicines(text) {\n    var filtered = medicines.filter(function (medicine) {\n      return medicine.name.toLowerCase().includes(text.toLowerCase());\n    });\n    setFilteredMedicines(filtered);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.logoBackground,\n        children: _jsx(Image, {\n          source: require(\"../assets/comparing.png\"),\n          style: styles.logo\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Medicine Interaction Checker\"\n      })]\n    }), _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [_jsx(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"Search Medicine 1\",\n        value: selectedMedicine1,\n        onChangeText: handleMedicine1Change\n      }), filteredMedicines.map(function (medicine) {\n        return _jsx(Text, {\n          style: styles.autocompleteItem,\n          children: medicine.name\n        }, medicine.id);\n      }), _jsx(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"Search Medicine 2\",\n        value: selectedMedicine2,\n        onChangeText: handleMedicine2Change\n      }), filteredMedicines.map(function (medicine) {\n        return _jsx(Text, {\n          style: styles.autocompleteItem,\n          children: medicine.name\n        }, medicine.id);\n      }), _jsx(Button, {\n        title: \"Check Interaction\",\n        onPress: handleCheckInteraction\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFA0D2\"\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#FFC8E5\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\"\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFA0D2\"\n  },\n  dropdownContainer: {\n    marginTop: 10\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: \"#FAF9F8\",\n    borderColor: \"#ddd\",\n    borderBottomWidth: 1\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: \"#000\"\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default MedicineInteractionChecker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","Dimensions","Button","TextInput","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineInteractionChecker","_useState","_useState2","_slicedToArray","medicines","setMedicines","_useState3","_useState4","selectedMedicine1","setSelectedMedicine1","_useState5","_useState6","selectedMedicine2","setSelectedMedicine2","_useState7","_useState8","filteredMedicines","setFilteredMedicines","fetchMedicines","_ref","_asyncToGenerator","medicineList","getAllMedicine","translatedMedicineList","map","item","id","name","value","error","console","apply","arguments","handleCheckInteraction","_ref2","interactionResult","checkMedicineInteraction","log","handleMedicine1Change","text","filterMedicines","handleMedicine2Change","filtered","filter","medicine","toLowerCase","includes","style","styles","container","children","upperHalf","logoBackground","source","require","logo","title","lowerHalf","searchInput","placeholder","onChangeText","autocompleteItem","onPress","create","flex","backgroundColor","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","width","borderRadius","resizeMode","paddingHorizontal","paddingTop","fontSize","fontWeight","marginBottom","color","dropdownContainer","marginTop","dropdownItem","padding","borderColor","borderBottomWidth","dropdownItemText","borderWidth"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/MedicineInteractionChecker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Dimensions,\n  Button,\n  TextInput,\n} from \"react-native\";\nimport ApiService from \"../services/ApiService\";\n\nconst { height: screenHeight } = Dimensions.get(\"window\");\n\nconst MedicineInteractionChecker = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedicine1, setSelectedMedicine1] = useState('');\n  const [selectedMedicine2, setSelectedMedicine2] = useState('');\n  const [filteredMedicines, setFilteredMedicines] = useState([]);\n\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const medicineList = await ApiService.getAllMedicine();\n      const translatedMedicineList = medicineList.map((item) => ({\n        id: item.id,\n        name: item.name,\n        value: item.id,\n      }));\n      setMedicines(translatedMedicineList);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const handleCheckInteraction = async () => {\n    if (selectedMedicine1 && selectedMedicine2) {\n      try {\n        const interactionResult = await ApiService.checkMedicineInteraction(\n          selectedMedicine1.id,\n          selectedMedicine2.id\n        );\n        console.log(\"Interaction Result:\", interactionResult);\n        // Handle the interaction result as needed\n      } catch (error) {\n        console.error(error);\n        // Handle error\n      }\n    }\n  };\n\n  const handleMedicine1Change = (text) => {\n    setSelectedMedicine1(text);\n    filterMedicines(text);\n  };\n\n  const handleMedicine2Change = (text) => {\n    setSelectedMedicine2(text);\n    filterMedicines(text);\n  };\n\n  const filterMedicines = (text) => {\n    const filtered = medicines.filter((medicine) =>\n      medicine.name.toLowerCase().includes(text.toLowerCase())\n    );\n    setFilteredMedicines(filtered);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.logoBackground}>\n          <Image\n            source={require(\"../assets/comparing.png\")}\n            style={styles.logo}\n          />\n        </View>\n        <Text style={styles.title}>Medicine Interaction Checker</Text>\n      </View>\n      <View style={styles.lowerHalf}>\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search Medicine 1\"\n          value={selectedMedicine1}\n          onChangeText={handleMedicine1Change}\n        />\n        {filteredMedicines.map((medicine) => (\n          <Text key={medicine.id} style={styles.autocompleteItem}>\n            {medicine.name}\n          </Text>\n        ))}\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search Medicine 2\"\n          value={selectedMedicine2}\n          onChangeText={handleMedicine2Change}\n        />\n        {filteredMedicines.map((medicine) => (\n          <Text key={medicine.id} style={styles.autocompleteItem}>\n            {medicine.name}\n          </Text>\n        ))}\n        <Button title=\"Check Interaction\" onPress={handleCheckInteraction} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFA0D2\",\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#FFC8E5\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\",\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#FFA0D2\",\n  },\n  dropdownContainer: {\n    marginTop: 10,\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: \"#FAF9F8\",\n    borderColor: \"#ddd\",\n    borderBottomWidth: 1,\n  },\n  dropdownItemText: {\n    fontSize: 18,\n    color: \"#000\",\n  },\n  searchInput: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    backgroundColor: \"#fff\",\n  },\n});\n\nexport default MedicineInteractionChecker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}