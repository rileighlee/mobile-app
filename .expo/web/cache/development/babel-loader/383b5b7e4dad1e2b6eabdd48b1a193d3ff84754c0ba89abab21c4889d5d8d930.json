{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenHeight = _Dimensions$get.height;\nvar MedicineDetails = function MedicineDetails(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var initialMedicine = route.params.medicine;\n  var _useState = useState(initialMedicine),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicine = _useState2[0],\n    setMedicine = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    query = _useState4[0],\n    setQuery = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    suggestions = _useState6[0],\n    setSuggestions = _useState6[1];\n  var allMedicines = {};\n  var handleSearch = function handleSearch(text) {\n    setQuery(text);\n    var filteredMedicines = Object.keys(allMedicines).filter(function (med) {\n      return med.toLowerCase().includes(text.toLowerCase());\n    });\n    setSuggestions(filteredMedicines);\n  };\n  var handleSuggestionClick = function handleSuggestionClick(selectedMedicine) {\n    setMedicine(selectedMedicine);\n    setSuggestions([]);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.leftContent,\n        children: _jsx(Image, {\n          source: require(\"../assets/human.png\"),\n          style: styles.humanImage\n        })\n      }), _jsxs(View, {\n        style: styles.rightContent,\n        children: [_jsx(Image, {\n          source: require(\"../assets/biogesic.jpg\"),\n          style: styles.medicineImage\n        }), _jsx(Text, {\n          style: styles.medicineName,\n          children: medicine\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [_jsxs(View, {\n        style: styles.searchContainer,\n        children: [_jsx(TextInput, {\n          style: styles.searchInput,\n          placeholder: \"Search for a medicine\",\n          onChangeText: handleSearch,\n          value: query\n        }), suggestions.length > 0 && _jsx(View, {\n          style: styles.suggestionList,\n          children: suggestions.map(function (suggestion) {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return handleSuggestionClick(suggestion);\n              },\n              style: styles.suggestionItem,\n              children: _jsx(Text, {\n                children: suggestion\n              })\n            }, suggestion);\n          })\n        })]\n      }), medicine && _jsx(Text, {\n        style: styles.medicineDescription,\n        children: allMedicines[medicine]\n      }), _jsx(Text, {\n        style: styles.consultDoctorText,\n        children: \"If symptoms persist, consult your doctor.\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#00F1C6'\n  },\n  upperHalf: {\n    height: screenHeight * 0.4,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#89fff8',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  lowerHalf: {\n    marginTop: 10,\n    flex: 1,\n    paddingHorizontal: 20\n  },\n  leftContent: {\n    flex: 1,\n    alignItems: 'flex-start'\n  },\n  rightContent: {\n    flex: 1,\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  humanImage: {\n    position: 'relative',\n    marginBottom: -100,\n    marginLeft: -4,\n    width: 170,\n    height: 170,\n    resizeMode: 'cover'\n  },\n  medicineImage: {\n    marginRight: 50,\n    width: 80,\n    height: 80,\n    resizeMode: 'cover'\n  },\n  medicineName: {\n    marginRight: 50,\n    marginTop: 5,\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  searchContainer: {\n    marginBottom: 10\n  },\n  searchInput: {\n    borderColor: '#ccc',\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: 'white',\n    fontStyle: 'italic',\n    marginBottom: 10\n  },\n  suggestionList: {\n    backgroundColor: 'white',\n    borderRadius: 20\n  },\n  suggestionItem: {\n    borderColor: '#ccc',\n    padding: 6,\n    backgroundColor: 'white',\n    marginBottom: 5\n  },\n  medicineDescription: {\n    fontSize: 14\n  },\n  consultDoctorText: {\n    marginTop: 10,\n    textAlign: 'center',\n    fontSize: 14,\n    fontStyle: 'italic',\n    color: '#555'\n  }\n});\nexport default MedicineDetails;","map":{"version":3,"names":["React","useState","View","Text","Image","Pressable","TextInput","StyleSheet","Dimensions","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineDetails","_ref","route","navigation","initialMedicine","params","medicine","_useState","_useState2","_slicedToArray","setMedicine","_useState3","_useState4","query","setQuery","_useState5","_useState6","suggestions","setSuggestions","allMedicines","handleSearch","text","filteredMedicines","Object","keys","filter","med","toLowerCase","includes","handleSuggestionClick","selectedMedicine","style","styles","container","children","upperHalf","leftContent","source","require","humanImage","rightContent","medicineImage","medicineName","lowerHalf","searchContainer","searchInput","placeholder","onChangeText","value","length","suggestionList","map","suggestion","onPress","suggestionItem","medicineDescription","consultDoctorText","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","marginTop","paddingHorizontal","position","marginBottom","marginLeft","width","resizeMode","marginRight","fontSize","fontWeight","borderColor","padding","borderRadius","fontStyle","textAlign","color"],"sources":["C:/Users/makir/OneDrive/Desktop/MEDI_ALERT/Tabs/MedicineDetails.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, Pressable, TextInput, StyleSheet, Dimensions } from 'react-native';\r\n\r\nconst { height: screenHeight } = Dimensions.get('window');\r\n\r\nconst MedicineDetails = ({ route, navigation }) => {\r\n  const { medicine: initialMedicine } = route.params;\r\n  const [medicine, setMedicine] = useState(initialMedicine);\r\n  const [query, setQuery] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const allMedicines = {\r\n    // Define all medicines and descriptions here\r\n  };\r\n\r\n  const handleSearch = (text) => {\r\n    setQuery(text);\r\n\r\n    // Filter medicines based on the query\r\n    const filteredMedicines = Object.keys(allMedicines).filter((med) =>\r\n      med.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n    setSuggestions(filteredMedicines);\r\n  };\r\n\r\n  const handleSuggestionClick = (selectedMedicine) => {\r\n    setMedicine(selectedMedicine);\r\n    setSuggestions([]);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.upperHalf}>\r\n        <View style={styles.leftContent}>\r\n          <Image source={require('../assets/human.png')} style={styles.humanImage} />\r\n        </View>\r\n        <View style={styles.rightContent}>\r\n          <Image source={require('../assets/biogesic.jpg')} style={styles.medicineImage} />\r\n          <Text style={styles.medicineName}>{medicine}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.lowerHalf}>\r\n        <View style={styles.searchContainer}>\r\n          <TextInput\r\n            style={styles.searchInput}\r\n            placeholder=\"Search for a medicine\"\r\n            onChangeText={handleSearch}\r\n            value={query}\r\n          />\r\n          {suggestions.length > 0 && (\r\n            <View style={styles.suggestionList}>\r\n              {suggestions.map((suggestion) => (\r\n                <Pressable\r\n                  key={suggestion}\r\n                  onPress={() => handleSuggestionClick(suggestion)}\r\n                  style={styles.suggestionItem}\r\n                >\r\n                  <Text>{suggestion}</Text>\r\n                </Pressable>\r\n              ))}\r\n            </View>\r\n          )}\r\n        </View>\r\n        {medicine && (\r\n          <Text style={styles.medicineDescription}>\r\n            {allMedicines[medicine]}\r\n          </Text>\r\n        )}\r\n        <Text style={styles.consultDoctorText}>\r\n          If symptoms persist, consult your doctor.\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#00F1C6',\r\n  },\r\n  upperHalf: {\r\n    height: screenHeight * 0.4,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#89fff8',\r\n    borderBottomLeftRadius: 40,\r\n    borderBottomRightRadius: 40,\r\n  },\r\n  lowerHalf: {\r\n    marginTop: 10,\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n  },\r\n  leftContent: {\r\n    flex: 1,\r\n    alignItems: 'flex-start',\r\n  },\r\n  rightContent: {\r\n    flex: 1,\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'center',\r\n  },\r\n  humanImage: {\r\n    position: 'relative',\r\n    marginBottom: -100,\r\n    marginLeft: -4,\r\n    width: 170,\r\n    height: 170,\r\n    resizeMode: 'cover',\r\n  },\r\n  medicineImage: {\r\n    marginRight: 50,\r\n    width: 80,\r\n    height: 80,\r\n    resizeMode: 'cover',\r\n  },\r\n  medicineName: {\r\n    marginRight: 50,\r\n    marginTop: 5,\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  searchContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  searchInput: {\r\n    borderColor: '#ccc',\r\n    padding: 6,\r\n    borderRadius: 20,\r\n    backgroundColor: 'white',\r\n    fontStyle: 'italic',\r\n    marginBottom: 10,\r\n  },\r\n  suggestionList: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n  },\r\n  suggestionItem: {\r\n    borderColor: '#ccc',\r\n    padding: 6,\r\n    backgroundColor: 'white',\r\n    marginBottom: 5,\r\n  },\r\n  medicineDescription: {\r\n    fontSize: 14,\r\n  },\r\n  consultDoctorText: {\r\n    marginTop: 10,\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n    color: '#555',\r\n  },\r\n});\r\n\r\nexport default MedicineDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}