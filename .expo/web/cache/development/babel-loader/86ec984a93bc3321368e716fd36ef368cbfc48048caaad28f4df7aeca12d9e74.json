{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ApiService from \"../services/ApiService\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPassword = function ForgotPassword() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    recoveryPhrase = _useState2[0],\n    setRecoveryPhrase = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newPassword = _useState4[0],\n    setNewPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var handleResetPassword = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        if (recoveryPhrase && newPassword === confirmPassword) {\n          yield ApiService.ForgotPasswordWithRecoveryPhrase({\n            recoveryPhrase: recoveryPhrase,\n            password: newPassword\n          });\n          Alert.alert(\"Success\", \"Password reset successfully!\");\n          navigation.navigate(\"Login\");\n          Keyboard.dismiss();\n        } else {\n          Alert.alert(\"Error\", \"Recovery phrase and passwords should match.\");\n        }\n      } catch (error) {\n        console.error(\"Error resetting password:\", error.message);\n        Alert.alert(\"Error\", \"Failed to reset password. Please try again.\");\n      }\n    });\n    return function handleResetPassword() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Reset Password\"\n      })\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.subtitle,\n        children: \"Enter your email, new password, and confirm it.\"\n      }), _jsx(TextInput, {\n        placeholder: \"Recovery Phrase\",\n        style: styles.input,\n        value: recoveryPhrase,\n        onChangeText: function onChangeText(text) {\n          return setRecoveryPhrase(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"New Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: newPassword,\n        onChangeText: function onChangeText(text) {\n          return setNewPassword(text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Confirm Password\",\n        style: styles.input,\n        secureTextEntry: true,\n        value: confirmPassword,\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        }\n      }), _jsx(Pressable, {\n        style: styles.resetButton,\n        onPress: handleResetPassword,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Reset Password\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"skyblue\",\n    padding: 20,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    elevation: 5\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"black\"\n  },\n  form: {},\n  subtitle: {\n    fontSize: 16,\n    color: \"black\",\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15\n  },\n  resetButton: {\n    backgroundColor: \"lightblue\",\n    borderRadius: 10,\n    padding: 15,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});\nexport default ForgotPassword;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Pressable","StyleSheet","Keyboard","useNavigation","ApiService","Alert","jsx","_jsx","jsxs","_jsxs","ForgotPassword","navigation","_useState","_useState2","_slicedToArray","recoveryPhrase","setRecoveryPhrase","_useState3","_useState4","newPassword","setNewPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","handleResetPassword","_ref","_asyncToGenerator","ForgotPasswordWithRecoveryPhrase","password","alert","navigate","dismiss","error","console","message","apply","arguments","style","styles","container","children","header","title","form","subtitle","placeholder","input","value","onChangeText","text","secureTextEntry","resetButton","onPress","buttonText","create","flex","backgroundColor","padding","justifyContent","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","alignItems","marginBottom","fontSize","fontWeight","color"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  StyleSheet,\n  Keyboard,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ApiService from \"../services/ApiService\";\nimport { Alert } from \"react-native\";\n\nconst ForgotPassword = () => {\n  const navigation = useNavigation();\n  const [recoveryPhrase, setRecoveryPhrase] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleResetPassword = async () => {\n    try {\n      if (recoveryPhrase && newPassword === confirmPassword) {\n        await ApiService.ForgotPasswordWithRecoveryPhrase({\n          recoveryPhrase,\n          password: newPassword,\n        });\n        Alert.alert(\"Success\", \"Password reset successfully!\");\n        navigation.navigate(\"Login\");\n        Keyboard.dismiss();\n      } else {\n        // Handle missing recovery phrase or password mismatch error\n        Alert.alert(\"Error\", \"Recovery phrase and passwords should match.\");\n      }\n    } catch (error) {\n      console.error(\"Error resetting password:\", error.message);\n      // Handle password reset error (display error message, etc.)\n      Alert.alert(\"Error\", \"Failed to reset password. Please try again.\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Reset Password</Text>\n      </View>\n      <View style={styles.form}>\n        <Text style={styles.subtitle}>\n          Enter your email, new password, and confirm it.\n        </Text>\n        <TextInput\n          placeholder=\"Recovery Phrase\"\n          style={styles.input}\n          value={recoveryPhrase}\n          onChangeText={(text) => setRecoveryPhrase(text)}\n        />\n        <TextInput\n          placeholder=\"New Password\"\n          style={styles.input}\n          secureTextEntry={true}\n          value={newPassword}\n          onChangeText={(text) => setNewPassword(text)}\n        />\n        <TextInput\n          placeholder=\"Confirm Password\"\n          style={styles.input}\n          secureTextEntry={true}\n          value={confirmPassword}\n          onChangeText={(text) => setConfirmPassword(text)}\n        />\n        <Pressable style={styles.resetButton} onPress={handleResetPassword}>\n          <Text style={styles.buttonText}>Reset Password</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"skyblue\",\n    padding: 20,\n    justifyContent: \"center\",\n    borderRadius: 10,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    elevation: 5,\n  },\n  header: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"black\", // Change text color to black\n  },\n  form: {},\n  subtitle: {\n    fontSize: 16,\n    color: \"black\",\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 15,\n  },\n  resetButton: {\n    backgroundColor: \"lightblue\",\n    borderRadius: 10,\n    padding: 15,\n    alignItems: \"center\",\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default ForgotPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}