{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenHeight = _Dimensions$get.height;\nvar MedicineInteractionChecker = function MedicineInteractionChecker() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicines = _useState2[0],\n    setMedicines = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMedicine1 = _useState4[0],\n    setSelectedMedicine1 = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedMedicine2 = _useState6[0],\n    setSelectedMedicine2 = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    searchMedicineText1 = _useState8[0],\n    setSearchMedicineText1 = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    searchMedicineText2 = _useState10[0],\n    setSearchMedicineText2 = _useState10[1];\n  useEffect(function () {\n    fetchMedicines();\n  }, []);\n  var fetchMedicines = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var medicineList = yield ApiService.getAllMedicine();\n        setMedicines(medicineList);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchMedicines() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var filterMedicines = function filterMedicines(text, setMedicineFunction) {\n    var filteredMedicines = medicines.filter(function (medicine) {\n      return medicine.name.toLowerCase().includes(text.toLowerCase());\n    });\n    setMedicineFunction(filteredMedicines);\n  };\n  var handleCheckInteraction = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (selectedMedicine1 && selectedMedicine2) {\n        try {\n          var interactionResult = yield ApiService.checkMedicineInteraction(selectedMedicine1, selectedMedicine2);\n          console.log('Interaction Result:', interactionResult);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    });\n    return function handleCheckInteraction() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.logoBackground,\n        children: _jsx(Image, {\n          source: require(\"../assets/comparing.png\"),\n          style: styles.logo\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Medicine Interaction Checker\"\n      })]\n    }), _jsxs(View, {\n      style: styles.lowerHalf,\n      children: [_jsx(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"Search for medicine\",\n        onChangeText: function onChangeText(text) {\n          setSearchMedicineText1(text);\n          filterMedicines(text, setMedicines);\n        },\n        value: searchMedicineText1\n      }), _jsx(DropDownPicker, {\n        items: medicines.map(function (medicine) {\n          return {\n            label: medicine.name,\n            value: medicine.id\n          };\n        }),\n        defaultValue: selectedMedicine1,\n        containerStyle: {\n          height: 40\n        },\n        style: {\n          backgroundColor: '#fafafa',\n          marginTop: 10\n        },\n        dropDownStyle: {\n          backgroundColor: '#fafafa'\n        },\n        onChangeItem: function onChangeItem(item) {\n          return setSelectedMedicine1(item.value);\n        },\n        searchable: true,\n        searchablePlaceholder: \"Search for medicine\",\n        searchableError: function searchableError() {\n          return _jsx(Text, {\n            children: \"Medicine not found\"\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Check Interaction\",\n        onPress: handleCheckInteraction\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA0D2'\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: 'center',\n    backgroundColor: '#FFC8E5',\n    alignItems: 'center',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'cover'\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#FFA0D2'\n  }\n});\nexport default MedicineInteractionChecker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","StyleSheet","Dimensions","Button","TextInput","DropDownPicker","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineInteractionChecker","_useState","_useState2","_slicedToArray","medicines","setMedicines","_useState3","_useState4","selectedMedicine1","setSelectedMedicine1","_useState5","_useState6","selectedMedicine2","setSelectedMedicine2","_useState7","_useState8","searchMedicineText1","setSearchMedicineText1","_useState9","_useState10","searchMedicineText2","setSearchMedicineText2","fetchMedicines","_ref","_asyncToGenerator","medicineList","getAllMedicine","error","console","apply","arguments","filterMedicines","text","setMedicineFunction","filteredMedicines","filter","medicine","name","toLowerCase","includes","handleCheckInteraction","_ref2","interactionResult","checkMedicineInteraction","log","style","styles","container","children","upperHalf","logoBackground","source","require","logo","title","lowerHalf","searchInput","placeholder","onChangeText","value","items","map","label","id","defaultValue","containerStyle","backgroundColor","marginTop","dropDownStyle","onChangeItem","item","searchable","searchablePlaceholder","searchableError","onPress","create","flex","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","width","borderRadius","resizeMode","paddingHorizontal","paddingTop","fontSize","fontWeight","marginBottom","color"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/MedicineInteractionChecker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Image, StyleSheet, Dimensions, Button, TextInput } from 'react-native';\nimport DropDownPicker from 'react-native-dropdown-picker';\nimport ApiService from '../services/ApiService';\n\nconst { height: screenHeight } = Dimensions.get('window');\n\nconst MedicineInteractionChecker = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedicine1, setSelectedMedicine1] = useState(null);\n  const [selectedMedicine2, setSelectedMedicine2] = useState(null);\n  const [searchMedicineText1, setSearchMedicineText1] = useState('');\n  const [searchMedicineText2, setSearchMedicineText2] = useState('');\n\n  useEffect(() => {\n    fetchMedicines();\n  }, []);\n\n  const fetchMedicines = async () => {\n    try {\n      const medicineList = await ApiService.getAllMedicine();\n      setMedicines(medicineList);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const filterMedicines = (text, setMedicineFunction) => {\n    const filteredMedicines = medicines.filter((medicine) =>\n      medicine.name.toLowerCase().includes(text.toLowerCase())\n    );\n    setMedicineFunction(filteredMedicines);\n  };\n\n  const handleCheckInteraction = async () => {\n    if (selectedMedicine1 && selectedMedicine2) {\n      try {\n        const interactionResult = await ApiService.checkMedicineInteraction(\n          selectedMedicine1,\n          selectedMedicine2\n        );\n        console.log('Interaction Result:', interactionResult);\n        // Handle the interaction result as needed\n      } catch (error) {\n        console.error(error);\n        // Handle error\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.logoBackground}>\n          <Image source={require('../assets/comparing.png')} style={styles.logo} />\n        </View>\n        <Text style={styles.title}>Medicine Interaction Checker</Text>\n      </View>\n      <View style={styles.lowerHalf}>\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search for medicine\"\n          onChangeText={(text) => {\n            setSearchMedicineText1(text);\n            filterMedicines(text, setMedicines);\n          }}\n          value={searchMedicineText1}\n        />\n        <DropDownPicker\n          items={medicines.map((medicine) => ({\n            label: medicine.name,\n            value: medicine.id,\n          }))}\n          defaultValue={selectedMedicine1}\n          containerStyle={{ height: 40 }}\n          style={{ backgroundColor: '#fafafa', marginTop: 10 }}\n          dropDownStyle={{ backgroundColor: '#fafafa' }}\n          onChangeItem={(item) => setSelectedMedicine1(item.value)}\n          searchable={true}\n          searchablePlaceholder=\"Search for medicine\"\n          searchableError={() => <Text>Medicine not found</Text>}\n        />\n        {/* Similar TextInput and DropDownPicker for second medicine */}\n        <Button title=\"Check Interaction\" onPress={handleCheckInteraction} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA0D2',\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: 'center',\n    backgroundColor: '#FFC8E5',\n    alignItems: 'center',\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: 'cover',\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#FFA0D2',\n  },\n});\n\nexport default MedicineInteractionChecker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}