{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar BASE_URL = 'https://localhost:7054/api';\nvar ApiService = {\n  getData: function () {\n    var _getData = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get(`${BASE_URL}/endpoint`);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n    return getData;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator(function* (email, password) {\n      try {\n        var response = yield axios.post(`${BASE_URL}/User/login`, {\n          email: email,\n          password: password\n        });\n        return response.data.token;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  postData: function () {\n    var _postData = _asyncToGenerator(function* (data) {\n      try {\n        var response = yield axios.post(`${BASE_URL}/endpoint`, data);\n        return response.data;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function postData(_x3) {\n      return _postData.apply(this, arguments);\n    }\n    return postData;\n  }()\n};\nexport default ApiService;","map":{"version":3,"names":["axios","BASE_URL","ApiService","getData","_getData","_asyncToGenerator","response","get","data","error","Error","message","apply","arguments","login","_login","email","password","post","token","_x","_x2","postData","_postData","_x3"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/services/ApiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://localhost:7054/api';\r\n\r\nconst ApiService = {\r\n  getData: async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/endpoint`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  login: async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/User/login`, {\r\n        email: email,\r\n        password: password,\r\n      });\r\n      return response.data.token; // Assuming the token is returned in the response\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  postData: async (data) => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/endpoint`, data);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n\r\n  // Add other API methods as needed\r\n};\r\n\r\nexport default ApiService;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,QAAQ,GAAG,4BAA4B;AAE7C,IAAMC,UAAU,GAAG;EACjBC,OAAO;IAAA,IAAAC,QAAA,GAAAC,iBAAA,CAAE,aAAY;MACnB,IAAI;QACF,IAAMC,QAAQ,SAASN,KAAK,CAACO,GAAG,CAAE,GAAEN,QAAS,WAAU,CAAC;QACxD,OAAOK,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;MAChC;IACF,CAAC;IAAA,SAAAR,QAAA;MAAA,OAAAC,QAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAV,OAAA;EAAA;EAEDW,KAAK;IAAA,IAAAC,MAAA,GAAAV,iBAAA,CAAE,WAAOW,KAAK,EAAEC,QAAQ,EAAK;MAChC,IAAI;QACF,IAAMX,QAAQ,SAASN,KAAK,CAACkB,IAAI,CAAE,GAAEjB,QAAS,aAAY,EAAE;UAC1De,KAAK,EAAEA,KAAK;UACZC,QAAQ,EAAEA;QACZ,CAAC,CAAC;QACF,OAAOX,QAAQ,CAACE,IAAI,CAACW,KAAK;MAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;MAChC;IACF,CAAC;IAAA,SAAAG,MAAAM,EAAA,EAAAC,GAAA;MAAA,OAAAN,MAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,KAAA;EAAA;EAEDQ,QAAQ;IAAA,IAAAC,SAAA,GAAAlB,iBAAA,CAAE,WAAOG,IAAI,EAAK;MACxB,IAAI;QACF,IAAMF,QAAQ,SAASN,KAAK,CAACkB,IAAI,CAAE,GAAEjB,QAAS,WAAU,EAAEO,IAAI,CAAC;QAC/D,OAAOF,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;MAChC;IACF,CAAC;IAAA,SAAAW,SAAAE,GAAA;MAAA,OAAAD,SAAA,CAAAX,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAS,QAAA;EAAA;AAGH,CAAC;AAED,eAAepB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}