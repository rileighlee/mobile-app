{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ApiService from \"../services/ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  screenHeight = _Dimensions$get.height;\nvar MedicineLists = function MedicineLists(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    categoriesWithMedicines = _useState2[0],\n    setCategoriesWithMedicines = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedMedicine = _useState4[0],\n    setSelectedMedicine = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedCategory = _useState6[0],\n    setSelectedCategory = _useState6[1];\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      title: '',\n      headerStyle: {\n        backgroundColor: \"#F2ABFF\"\n      },\n      headerTintColor: \"black\"\n    });\n  }, [navigation]);\n  useEffect(function () {\n    fetchCategoriesWithMedicines();\n  }, []);\n  var fetchCategoriesWithMedicines = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = yield ApiService.getAllCategoriesWithMedicines();\n        setCategoriesWithMedicines(data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchCategoriesWithMedicines() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleCategoryClick = function handleCategoryClick(index) {\n    setSelectedCategory(index === selectedCategory ? null : index);\n  };\n  var handleMedicineClick = function handleMedicineClick(medicine) {\n    setSelectedMedicine(medicine);\n    navigation.navigate(\"MedicineDetails\", {\n      medicineId: medicine.id\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.upperHalf,\n      children: [_jsx(View, {\n        style: styles.logoBackground,\n        children: _jsx(Image, {\n          source: require(\"../assets/medicine.png\"),\n          style: styles.logo\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Medicine List\"\n      })]\n    }), _jsx(View, {\n      style: styles.lowerHalf,\n      children: categoriesWithMedicines.map(function (category, index) {\n        return _jsxs(Pressable, {\n          onPress: function onPress() {\n            return handleCategoryClick(index);\n          },\n          style: styles.barContainer,\n          children: [_jsx(View, {\n            style: styles.barTitleContainer,\n            children: _jsx(Text, {\n              style: styles.barTitle,\n              children: category.name\n            })\n          }), selectedCategory === index && _jsx(View, {\n            style: styles.medicineList,\n            children: category.medicines.map(function (medicine, medIndex) {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  return handleMedicineClick(medicine);\n                },\n                style: styles.medicineItem,\n                children: _jsx(Text, {\n                  style: styles.medicineText,\n                  children: medicine.name\n                })\n              }, medIndex);\n            })\n          })]\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FADEFF\"\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#F2ABFF\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\"\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    marginTop: 10\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#A3007F\"\n  },\n  barContainer: {\n    marginBottom: 10,\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    fontStyle: \"italic\"\n  },\n  barTitleContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\"\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: \"italic\",\n    marginBottom: 5\n  },\n  downArrow: {\n    fontSize: 12\n  },\n  medicineList: {\n    marginVertical: 10\n  },\n  medicineItem: {\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    marginVertical: 5\n  },\n  medicineText: {\n    fontSize: 16\n  }\n});\nexport default MedicineLists;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","Pressable","StyleSheet","Dimensions","ApiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenHeight","height","MedicineLists","_ref","navigation","_useState","_useState2","_slicedToArray","categoriesWithMedicines","setCategoriesWithMedicines","_useState3","_useState4","selectedMedicine","setSelectedMedicine","_useState5","_useState6","selectedCategory","setSelectedCategory","useLayoutEffect","setOptions","title","headerStyle","backgroundColor","headerTintColor","fetchCategoriesWithMedicines","_ref2","_asyncToGenerator","data","getAllCategoriesWithMedicines","error","console","apply","arguments","handleCategoryClick","index","handleMedicineClick","medicine","navigate","medicineId","id","style","styles","container","children","upperHalf","logoBackground","source","require","logo","lowerHalf","map","category","onPress","barContainer","barTitleContainer","barTitle","name","medicineList","medicines","medIndex","medicineItem","medicineText","create","flex","justifyContent","alignItems","borderBottomLeftRadius","borderBottomRightRadius","width","borderRadius","resizeMode","paddingHorizontal","marginTop","fontSize","fontWeight","marginBottom","color","borderColor","padding","fontStyle","flexDirection","downArrow","marginVertical"],"sources":["E:/project/MEDI_ALERT-master/MEDI_ALERT-master/Tabs/Medicinelists.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  Pressable,\n  StyleSheet,\n  Dimensions,\n} from \"react-native\";\nimport ApiService from \"../services/ApiService\"; // Import your ApiService\n\nconst { height: screenHeight } = Dimensions.get(\"window\");\n\nconst MedicineLists = ({ navigation }) => {\n  const [categoriesWithMedicines, setCategoriesWithMedicines] = useState([]);\n  const [selectedMedicine, setSelectedMedicine] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      title: '',\n      headerStyle: {\n        backgroundColor: \"#F2ABFF\", // Set header background color\n      },\n      headerTintColor: \"black\",\n    });\n  }, [navigation]);\n\n  useEffect(() => {\n    fetchCategoriesWithMedicines();\n  }, []);\n\n  const fetchCategoriesWithMedicines = async () => {\n    try {\n      const data = await ApiService.getAllCategoriesWithMedicines();\n      setCategoriesWithMedicines(data);\n    } catch (error) {\n      console.error(error);\n      // Handle error\n    }\n  };\n\n  const handleCategoryClick = (index) => {\n    setSelectedCategory(index === selectedCategory ? null : index);\n  };\n\n  const handleMedicineClick = (medicine) => {\n    setSelectedMedicine(medicine);\n    navigation.navigate(\"MedicineDetails\", { medicineId: medicine.id }); // Pass medicine.id\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.upperHalf}>\n        <View style={styles.logoBackground}>\n          <Image\n            source={require(\"../assets/medicine.png\")}\n            style={styles.logo}\n          />\n        </View>\n        <Text style={styles.title}>Medicine List</Text>\n      </View>\n      <View style={styles.lowerHalf}>\n        {categoriesWithMedicines.map((category, index) => (\n          <Pressable\n            key={index}\n            onPress={() => handleCategoryClick(index)}\n            style={styles.barContainer}\n          >\n            <View style={styles.barTitleContainer}>\n              <Text style={styles.barTitle}>{category.name}</Text>\n              {/* Add your down arrow logic */}\n            </View>\n            {/* Medicine list logic */}\n            {selectedCategory === index && (\n              <View style={styles.medicineList}>\n                {category.medicines.map((medicine, medIndex) => (\n                  <Pressable\n                    key={medIndex}\n                    onPress={() => handleMedicineClick(medicine)}\n                    style={styles.medicineItem}\n                  >\n                    <Text style={styles.medicineText}>{medicine.name}</Text>\n                  </Pressable>\n                ))}\n              </View>\n            )}\n          </Pressable>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FADEFF\",\n  },\n  upperHalf: {\n    height: screenHeight * 0.3,\n    justifyContent: \"center\",\n    backgroundColor: \"#F2ABFF\",\n    alignItems: \"center\",\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40,\n  },\n  logoBackground: {\n    width: 100,\n    height: 100,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    resizeMode: \"cover\",\n  },\n  lowerHalf: {\n    paddingHorizontal: 20,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n    color: \"#A3007F\",\n  },\n  barContainer: {\n    marginBottom: 10,\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    fontStyle: \"italic\",\n  },\n  barTitleContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"baseline\",\n  },\n  barTitle: {\n    fontSize: 16,\n    fontWeight: \"italic\",\n    marginBottom: 5,\n  },\n  downArrow: {\n    fontSize: 12,\n  },\n  medicineList: {\n    marginVertical: 10,\n  },\n  medicineItem: {\n    borderColor: \"#ccc\",\n    padding: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    marginVertical: 5,\n  },\n  medicineText: {\n    fontSize: 16,\n  },\n});\n\nexport default MedicineLists;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}